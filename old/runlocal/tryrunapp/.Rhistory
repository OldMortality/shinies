m1 <- mean(x1)
m2 <- mean(x2)
S1 <- var(x1)
S2 <- var(x1)
s.p <- sqrt((S1+S2)/2)
stat[i] <- (m1 - m2)/((s.p)*sqrt(2/N))
t.t <- t.test(x1,x2)
t.t$statistic
stat[i]
stat[i] <- (m1 - m2)/((s.p)*sqrt(2/(N-1)))
stat[i]
stat[i] <- (m1 - m2)/(s.p)*sqrt(2/(N))
t.t <- t.test(x1,x2)
t.t$statistic
stat[i]
stat[i] <- (m1 - m2)/(s.p)*sqrt(2/(N))
stat[i]
stat[i] <- (m1 - m2)/(s.p)*sqrt(2/N))
stat[i] <- (m1 - m2)/(s.p*sqrt(2/N))
stat[i]
t.t <- t.test(x1,x2)
t.t$statistic
for (i in 1:1000) {
x1 <- rnorm(N,0,sd=1)
x2 <- rnorm(N,0,sd=1)
m1 <- mean(x1)
m2 <- mean(x2)
S1 <- var(x1)
S2 <- var(x1)
s.p <- sqrt((S1+S2)/2)
#t.test(x1)$statistic
stat[i] <- (m1 - m2)/(s.p*sqrt(2/N))
t.t <- t.test(x1,x2)
t.t$statistic
}
hist(stat,probability = T )
curve(dt(x,df=N-1),add = T, from = -4,to=4,
col='red')
df <- 2 * N - 2
hist(stat,probability = T )
curve(dt(x,df=df),add = T, from = -4,to=4,
col='red')
head(merged)
# for string_c
library(stringr)
# for %like%
library(data.table)
library(tableone)
setwd('/Users/micheldelange/pumps3/rscripts')
source('readData.r')
source('removeChems.r')
source('addDiabetesType.r')
# sets age groups and deprivation quintiles
source('toAgeGroup.r')
source('diedType2mos.r')
source('diedType2mos2.r')
source('createMergedData.r')
source('cystic.R')
# read data from files
allData <- readData(path = "/Users/micheldelange/pumps3/data/")
d <- rpois(1000,lambda=3)
install.packages("R2jags")
library(r2jags)
bayes.mod <- function()  {
for(i in 1:N){
y[i] ~ pois(lamda[i])
lamda[i] <- alpha
}
alpha ~ dunif(0, 5)
}
sim.dat <- data.frame(y=y)
y <- rpois(1000,lambda=3)
bayes.mod <- function()  {
for(i in 1:N){
y[i] ~ pois(lamda[i])
lamda[i] <- alpha
}
alpha ~ dunif(0, 5)
}
sim.dat <- data.frame(y=y)
sim.dat <- data.frame(y=y,N=1000)
y <- rpois(1000,lambda=3)
sim.dat <- data.frame(y=y,N=1000)
bayes.mod <- function()  {
for(i in 1:N){
y[i] ~ pois(lamda[i])
lamda[i] <- alpha
}
alpha ~ dunif(0, 5)
}
sim.dat.jags  <- as.list(sim.dat)
?jags
library(r2jags)
install.packages("R2jags")
library(R2jags)
?jags
fit <- jags(data = sim.dat.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 3, n.iter = 5000,
n.burnin = 500,
model.file = "bayes.mod")
sim.dat.jags  <- as.list(sim.dat)
bayes.mod.params <- c("lambda")
bayes.mod.inits <- function(){
list("alpha" = 5)
}
fit <- jags(data = sim.dat.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 3, n.iter = 5000,
n.burnin = 500,
model.file = "bayes.mod")
bayes.mod <- function()  {
for(i in 1:N){
y[i] ~ pois(lamda[i])
lamda[i] <- alpha
}
alpha ~ dunif(0, 5)
}
fit <- jags(data = sim.dat.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 3, n.iter = 5000,
n.burnin = 500,
model.file = "bayes.mod")
fit <- jags(data = sim.dat.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 3, n.iter = 5000,
n.burnin = 500,
model = "bayes.mod")
fit <- jags(data = sim.dat.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 3, n.iter = 5000,
n.burnin = 500,
model = "bayes.mod")
bayes.mod <- function()  {
for(i in 1:N){
y[i] ~ pois(lamda[i])
lamda[i] <- alpha
}
alpha ~ dunif(0, 5)
}
fit <- jags(data = sim.dat.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 3,
n.iter = 5000,
n.burnin = 500,
model = "bayes.mod")
bayes.mod()
bayes.mod
fit <- jags(data = sim.dat.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 3,
n.iter = 5000,
n.burnin = 500,
model.file = "bayes.mod()")
fit <- jags(data = sim.dat.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 3,
n.iter = 5000,
n.burnin = 500,
model.file = "bayes.mod.txt")
setwd('~/bayes/m1')
library(R2jags)
y <- rpois(1000,lambda=3)
sim.dat <- data.frame(y=y,N=1000)
sim.dat.jags  <- as.list(sim.dat)
bayes.mod.params <- c("lambda")
bayes.mod.inits <- function(){
list("alpha" = 5)
}
fit <- jags(data = sim.dat.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 3,
n.iter = 5000,
n.burnin = 500,
model.file = "bayes.mod")
fit <- jags(data = sim.dat.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 3,
n.iter = 5000,
n.burnin = 500,
model.file = "bayes.mod.txt")
fit <- jags(data = sim.dat.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 3,
n.iter = 5000,
n.burnin = 500,
model.file = "bayes.mod.txt")
fit <- jags(data = sim.dat.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 3,
n.iter = 5000,
n.burnin = 500,
model.file = "bayesmod.txt")
fit <- jags(data = sim.dat.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 3,
n.iter = 5000,
n.burnin = 500,
model.file = "bayesmod.txt")
fit <- jags(data = sim.dat.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 1,
n.iter = 5000,
n.burnin = 500,
model.file = "bayesmod.txt")
bayes.mod.inits <- function(){
list("lambda" = 5)
}
fit <- jags(data = sim.dat.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 1,
n.iter = 5000,
n.burnin = 500,
model.file = "bayesmod.txt")
fit <- jags(data = sim.dat.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 1,
n.iter = 5000,
n.burnin = 500,
model.file = "bayesmod.txt")
bayes.mod.params <- c("alpha")
fit <- jags(data = sim.dat.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 1,
n.iter = 5000,
n.burnin = 500,
model.file = "bayesmod.txt")
bayes.mod.inits <- function(){
list("alpha" = 5)
}
fit <- jags(data = sim.dat.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 1,
n.iter = 5000,
n.burnin = 500,
model.file = "bayesmod.txt")
sim.dat
sim.dat <- data.frame(y=y))
sim.dat <- data.frame(y=y)
sim.dat.jags  <- as.list(sim.dat)
sim.dat.jags  <- as.list(sim.dat,N)
bayes.mod.params <- c("alpha")
bayes.mod.inits <- function(){
list("alpha" = 5)
}
fit <- jags(data = sim.dat.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 1,
n.iter = 5000,
n.burnin = 500,
model.file = "bayesmod.txt")
sim.dat <- data.frame(y=y,N=1000)
y
sim.dat <- data.frame(y=y,N=1000)
sim.dat.jags  <- as.list(sim.dat)
sim.dat.jags
N <- 1000
y <- rpois(N,lambda=3)
sim.dat <- data.frame(y=y)
sim.dat.jags  <- as.list(sim.dat,'N'=N)
bayes.mod.params <- c("alpha")
bayes.mod.inits <- function(){
list("alpha" = 5)
}
fit <- jags(data = sim.dat.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 1,
n.iter = 5000,
n.burnin = 500,
model.file = "bayesmod.txt")
sim.dat.jags
y <- rpois(N,lambda=3)
sim.dat.jags  <- as.list('y'=y,'N'=N)
sim.dat.jags  <- list('y'=y,'N'=N)
bayes.mod.params <- c("alpha")
bayes.mod.inits <- list(
list("alpha" = 1),
list("alpha" = 2),
list("alpha" = 5)
)
setwd('~/bayes/m1')
library(R2jags)
N <- 1000
y <- rpois(N,lambda=3)
sim.dat.jags  <- list('y'=y,'N'=N)
bayes.mod.params <- c("alpha")
bayes.mod.inits <- list(
list("alpha" = 1),
list("alpha" = 2),
list("alpha" = 5)
)
fit <- jags(data = sim.dat.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 1,
n.iter = 5000,
n.burnin = 500,
model.file = "bayesmod.txt")
fit <- jags(data = sim.dat.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 3,
n.iter = 5000,
n.burnin = 500,
model.file = "bayesmod.txt")
fit <- jags(data = sim.dat.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 3,
n.iter = 5000,
n.burnin = 500,
model.file = "bayesmod.txt")
fit <- jags(data = sim.dat.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 3,
n.iter = 5000,
n.burnin = 500,
model.file = "bayesmod.txt")
fit <- jags(data = sim.dat.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 3,
n.iter = 5000,
n.burnin = 500,
model.file = "bayesmod.txt")
samples <- fit$BUGSoutput$sims.list$alpha
sm <- samples$BUGS$summ
samples
plot(samples)
plot(samples)
plot(samples,pch='.')
sm <- fit$BUGS$summary
sm
plot(fit)
print(fit)
warings()
warnings()
print(fit)
print(fit)
traceplot(fit)
traceplot(fit)
samples <- fit$BUGSoutput$sims.list$alpha
samples <- fit$BUGSoutput$sims.list$alpha
fit <- jags(data = sim.dat.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 3,
n.iter = 1000,
n.burnin = 500,
model.file = "bayesmod.txt")
samples <- fit$BUGSoutput$sims.list$alpha
fit <- jags(data = sim.dat.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 4,
n.iter = 1000,
n.burnin = 500,
model.file = "bayesmod.txt")
fit <- jags(data = sim.dat.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 3,
n.iter = 1000,
n.burnin = 500,
model.file = "bayesmod.txt")
?jags
jagsfit.mcmc <- as.mcmc.list(fit)
jagsfit.mcmc <- as.mcmc.list(fit)
hist(samples)
sex <- c(rep('F',halfN),rep('M',halfN))
halfN <- N/2
y <- c(rpois(halfN,lambda=3),rpois(halfN,lambda=5))
sex <- c(rep('F',halfN),rep('M',halfN))
sim.dat.jags  <- list('y'=y,'sex'=sex,'N'=N)
setwd('~/bayes/m1')
library(R2jags)
N <- 1000
halfN <- N/2
y <- c(rpois(halfN,lambda=3),rpois(halfN,lambda=5))
sex <- c(rep('F',halfN),rep('M',halfN))
sim.dat.jags  <- list('y'=y,'sex'=sex,'N'=N)
bayes.mod.params <- c("alpha","beta")
bayes.mod.inits <- list(
list("alpha" = 1,"beta" = 1),
list("alpha" = 2,"beta" = 2),
list("alpha" = 5,"beta" = 5)
)
y <- c(rpois(halfN,lambda=3),rpois(halfN,lambda=5))
sex <- c(rep(0,halfN),rep(1,halfN))
sim.dat.jags  <- list('y'=y,'sex'=sex,'N'=N)
bayes.mod.params <- c("alpha","beta")
bayes.mod.inits <- list(
list("alpha" = 1,"beta" = 1),
list("alpha" = 2,"beta" = 2),
list("alpha" = 5,"beta" = 5)
)
fit <- jags(data = sim.dat.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 3,
n.iter = 1000,
n.burnin = 500,
model.file = "bayesmod.txt")
length(y)
c(length(y),length(sex))
fit <- jags(data = sim.dat.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 3,
n.iter = 1000,
n.burnin = 500,
model.file = "bayesmod.txt")
fit <- jags(data = sim.dat.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 3,
n.iter = 1000,
n.burnin = 500,
model.file = "bayesmod.txt")
traceplot(fit)
samples.a <- fit$BUGSoutput$sims.list$alpha
samples.b <- fit$BUGSoutput$sims.list$beta
plot(samples.b,pch='.')
sm <- fit$BUGS$summary
sm
fit <- jags(data = sim.dat.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 3,
n.iter = 10000,
n.burnin = 500,
model.file = "bayesmod.txt")
print(fit)
N <- 5000
halfN <- N/2
y <- c(rpois(halfN,lambda=3),rpois(halfN,lambda=5))
sex <- c(rep(0,halfN),rep(1,halfN))
c(length(y),length(sex))
sim.dat.jags  <- list('y'=y,'sex'=sex,'N'=N)
fit <- jags(data = sim.dat.jags, inits = bayes.mod.inits,
parameters.to.save = bayes.mod.params,
n.chains = 3,
n.iter = 10000,
n.burnin = 500,
model.file = "bayesmod.txt")
print(fit)
length(y>3)
length(y>4)
sum(y>4)
y[which(sex==0)]
sum(y[which(sex==0)]>4)
length(which(sex==0)))
length(which(sex==0))
sum(y[which(sex==0)]>4)/length(which(sex==0))
samples[a]
l.0 <- samples.a[500:1500]
y.hat <- rpois(lambda=l.0)
y.hat <- rpois(n=1000,lambda=l.0)
sum(y.hat>4/length(y.hat))
sum(y.hat>4)/length(y.hat)
some.value <- 4
sum(y[which(sex==0)]>some.value)/length(which(sex==0))
l.0 <- samples.a[500:1500]
y.hat <- rpois(n=1000,lambda=l.0)
sum(y.hat>some.value)/length(y.hat)
sum(y[which(sex==0)]>some.value)/length(which(sex==0))
some.value <- 3
sum(y[which(sex==0)]>some.value)/length(which(sex==0))
l.0 <- samples.a[500:1500]
y.hat <- rpois(n=1000,lambda=l.0)
sum(y.hat>some.value)/length(y.hat)
l.a <- samples.a[500:1500]
l.b <- samples.b[500:1500]
y.hat <- rpois(n=1000,lambda=l.a + l.b)
sum(y.hat>some.value)/length(y.hat)
sum(y[which(sex==1)]>some.value)/length(which(sex==1))
plot(y.hat~y[500:1500])
y[500:1500]
y.hat
y[500:1500]
length(y.hat)
length(y[500:1500])
d <- data.frame(y=y,sex=sex)
y.hat <- rep(NA,n)
n <- 1000
y.obs <- y[n]
y.hat <- rep(NA,n)
y.obs <- sample(y,n)
y.obs
s <- sample(n)
sex[s]
s <- sample(n)
s
sex[s]
s
library(shiny)
runApp('~/Documents/shiny/app1')
runApp('~/Documents/shiny/tryrunapp')
runApp('~/Documents/shiny/tryrunapp')
runApp('~/Documents/shiny/tryrunapp')
runApp('~/Documents/shiny/tryrunapp')
?rstudioapi
??rstudioapi
install.packages("rstudioapi")
librar(rstudioapi)
library(rstudioapi)
shiny::runApp('~/Documents/shiny/tryrunapp')
??rstudioapi
?rstudioapi
library(rstudioapi)
runApp('~/Documents/shiny/tryrunapp')
?jobRunScript
jobRunScript(path = '~/Documents/shiny/tryrunapp/runapp1.R')
jobRunScript(path = '~/STAT/rscripts/helloworld.R')
library(rstudioapi)
jobRunScript(path = '~/STAT/rscripts/helloworld.R')
version
source('~/STAT/rscripts/helloworld.R')
source('/Users/micheldelange/STATS/rscripts/helloworld.R')
jobRunScript(path = '/Users/micheldelange/STATS/rscripts/helloworld.R')
jobRunScript(path = '~/STATS/rscripts/helloworld.R')
source('~/STATS/rscripts/helloworld.R')
runApp('~/Documents/shiny/tryrunapp')
