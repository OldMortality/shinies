lp <- predict(mnb0)
plot(lp,rD,main="negbin model")
sim.mnb <- simulate(mnb0)$sim_1
a_sim <- glm.nb(sim.mnb ~ f$Age_5grp_024 + f$gender + f$ethnic_5grp +  f$NZDepQuintile + f$DHB_idName + offset(expos))
rD_sim <- residuals(a_sim)/sqrt(1-hatvalues(a_sim))
lp_sim <- predict(a_sim)
points(lp_sim,rD_sim,col='red')
plot(lp,rD,main="0 negbin model, lp,rD")
plot(lp_sim,rD_sim,main="0 negbin model, lp_sim,rd_sim",col='red')
mnb0 <- glm.nb(num_episodes ~ Age_5grp_024 +  gender + ethnic_5grp +  NZDepQuintile + DHB_idName , data=f)
summary(mnb0)
anova(mnb0,test='Chisq')
summary(mnb0)
exp(-0.2)
?read.delim
?read.delim2
?read.delim
x <- c('fred',1,2,3)
x <- rbind(x1,x2,x3,x4)
x1 <- c('fred',1)
x2 <- c('fred',2)
x3 <- c('jane',1)
x4 <- c('jane',2)
x <- rbind(x1,x2,x3,x4)
x
reshape(x,idvar="1",direction="wide")
colnames(x) <- c("name","number")
x
reshape(x,idvar="name",direction="wide")
reshape(x,idvar="name",timevar=rowid,direction="wide")
reshape(x,idvar="name",timevar=rownum(),direction="wide")
?reshape
reshape(x,timevar="name",direction="wide")
reshape(x,idvar="name",timevar="name",direction="wide")
y <- reshape(x,direction="wide")
summary(Indometh)
wide <- reshape(Indometh, v.names = "conc", idvar = "Subject",
timevar = "time", direction = "wide")
wide
library(tidyr)
data_wide <- spread(x, number)
library(tidyr)
data_wide <- spread(x, number)
y <- as.data.frame(reshape(x,direction="wide"))
x <- data.frame(rbind(x1,x2,x3,x4))
data_wide <- spread(x, number)
colnames(x) <- c("name","number")
data_wide <- spread(x, number)
x
data_wide <- spread(x, number)
data_wide <- spread(x, "number")
?lsmeans
??lsmeans
x <- c(1,2,3,4,5)
z <- x == 3
z
x[z,]
x[z]
x <- c(11,12,13,14,15)
z <- x == 13
z
x[z]
order(x)
order(x,decreasing = T)
7%2
7 %% 2
nextN <- function(n) {
if (n %% 2 == 0) {
return(n/2)
} else {
return (3*n + 1)
}
}
N <- 10
while ( N > 1) {
N <- nextN(N)
print(N)
}
series(10)
series <- function(N) {
N <- 10
while ( N > 1) {
N <- nextN(N)
print(N)
}
}
series(10)
series(12)
series <- function(N) {
while ( N > 1) {
N <- nextN(N)
print(N)
}
}
series(12)
series(13)
knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning=FALSE )
options(scipen = 1, digits = 0)
##
## This is with a new dataset, where age has been defined as age at 1st event, and with
##   ethnicities having an extra group.
##
d <- read.csv('/Users/micheldelange/Documents/midwives/6_SPSSExport_Analysis.csv',header=T)
d$Eth.Groups <- factor(d$Eth.Groups)
d$Eth.Groups <- relevel(d$Eth.Groups, ref="European")
e <- d
hist(e$IPI,30,main="IPI",xlab="IPI (days)")
knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning=FALSE )
options(scipen = 1, digits = 0)
##
## This is with a new dataset, where age has been defined as age at 1st event, and with
##   ethnicities having an extra group.
##
library(plyr)
d <- read.csv('/Users/micheldelange/Documents/midwives/6_SPSSExport_Analysis.csv',header=T)
#colnames(d)
#table(d$Eth.Groups)
d$Eth.Groups <- factor(d$Eth.Groups)
# make European the reference level
d$Eth.Groups <- relevel(d$Eth.Groups, ref="European")
e <- d
#dim(e)
#table(e$Eth.Groups)
hist(e$IPI,30,main="IPI",xlab="IPI (days)")
hist(e$Age.at.preceding.event,30,main="Mothers' age",xlab="Age (years)")
e$age_group <- 'A<=50'
e[which(e$Age.at.preceding.event <= 40),"age_group"] <- "A<=40"
e[which(e$Age.at.preceding.event <= 30),"age_group"] <- "A<=30"
e[which(e$Age.at.preceding.event <= 20),"age_group"] <- "A<=20"
gr20 <- median(e[which(e$age_group == "A<=20"),"IPI"])
gr30 <- median(e[which(e$age_group == "A<=30"),"IPI"])
gr40 <- median(e[which(e$age_group == "A<=40"),"IPI"])
gr50 <- median(e[which(e$age_group == "A<=50"),"IPI"])
gr20_m <- mean(e[which(e$age_group == "A<=20"),"IPI"])
gr30_m <- mean(e[which(e$age_group == "A<=30"),"IPI"])
gr40_m <- mean(e[which(e$age_group == "A<=40"),"IPI"])
gr50_m <- mean(e[which(e$age_group == "A<=50"),"IPI"])
{
boxplot(e$IPI~e$age_group,main="IPI by age group")
}
m <- lm(e$IPI~e$age_group)
anova(m)
m <- lm(e$IPI ~ e$Age.at.preceding.event)
{
plot(e$IPI ~ e$Age.at.preceding.event,main="linear regression of IPI vs. Age",ylab="IPI",xlab="Age")
abline(coefficients(m)[1], coefficients(m)[2],col='red')
}
boxplot(e$IPI~e$Eth.Groups)
m <- lm(e$IPI~e$Eth.Groups)
asi <- median(e[which(e$Eth.Groups   == "Asian"),"IPI"])
mao <- median(e[which(e$Eth.Groups == "Maori"),"IPI"])
oth <- median(e[which(e$Eth.Groups == "Other"),"IPI"])
pac <- median(e[which(e$Eth.Groups == "Pacific"),"IPI"])
pak <- median(e[which(e$Eth.Groups == "European"),"IPI"])
me <-  median(e[which(e$Eth.Groups == "ME LA A"),"IPI"])
diff <- max(c(mao,oth,pac,pak,asi,me))-min(c(mao,oth,pac,pak,asi,me))
asi_m <- mean(e[which(e$Eth.Groups == "Maori"),"IPI"])
mao_m <- mean(e[which(e$Eth.Groups == "Maori"),"IPI"])
oth_m <- mean(e[which(e$Eth.Groups == "Other"),"IPI"])
pac_m <- mean(e[which(e$Eth.Groups == "Pacific"),"IPI"])
pak_m <- mean(e[which(e$Eth.Groups == "European"),"IPI"])
me_m <- mean(e[which(e$Eth.Groups == "ME LA A"),"IPI"])
diff_m <- max(c(mao_m,oth_m,pac_m,pak_m,asi,me))-min(c(mao_m,oth_m,pac_m,pak_m,asi,me))
#ma <- e[which(e$Eth.Groups == "b_Maori"),"IPI"]
m <- lm(e$IPI ~ e$Eth.Groups)
anova(m)
dropm <- (which(is.na(e$NZDep)))
e <- e[-dropm,]
e$dep_group <- "high"
e[which(e$NZDep %in% c(1,2,3)),"dep_group"] <- "a_low"
e[which(e$NZDep %in% c(4,5,6,7)),"dep_group"] <- "b_medium"
e[which(e$NZDep %in% c(8,9,10)),"dep_group"] <- "c_high"
#table(e$NZDep,e$dep_group)
low <- median(e[which(e$dep_group == "a_low"),"IPI"])
med <- median(e[which(e$dep_group == "b_medium"),"IPI"])
hig <- median(e[which(e$dep_group == "c_high"),"IPI"])
hist(e$NZDep,xlab='Deprivation index',main="Deprivation")
boxplot(e$IPI~e$dep_group,xlab="deprivation group",
main="IPI by deprivation group")
m <- lm(e$IPI ~ e$dep_group)
anova(m)
pval <- toString( round(1000*anova(m)[1,5])/1000)
e$mode <- e$Preceding.mode.of.delivery..general
e$mode <- e$Prec_Delivery_Mode_Category
table(e$mode)
dropm <- which(e$mode == 'Unknown')
e <- e[-dropm,]
#dim(e)
#table(e$mode)
e$mode <- factor(e$mode)
boxplot(e$IPI~e$mode)
C <- median(e[which(e$mode == "C"),"IPI"])
V <- median(e[which(e$mode == "V"),"IPI"])
m <- lm(e$IPI ~ e$mode)
anova(m)
pval <- toString( round(100*anova(m)[1,5])/100)
hist(e$Parity)
m <- lm(IPI~Parity,data=e)
summary(m)
pval <- toString( round(100*anova(m)[1,5])/100)
anova(m)
m <- lm(IPI ~ age_group + Eth.Groups + dep_group + mode + Parity,data=e )
anova(m)
m <- lm(log(IPI) ~ age_group + Eth.Groups + dep_group + mode + Parity,data=e )
anova(m)
hist(e$IPI)
hist(log(IPI))
hist(log(e$IPI))
m <- lm(IPI ~ age_group + Eth.Groups + dep_group + mode + Parity,data=e )
hist(residuals(m))
plot(residuals(m))
m <- lm(IPI ~ age_group + Eth.Groups + dep_group + mode + Parity,data=e )
p <- predict(m)
plot(residuals(m)~p)
m <- lm(log(IPI) ~ age_group + Eth.Groups + dep_group + mode + Parity,data=e )
p <- predict(m)
plot(residuals(m)~p)
qqnorm(m)
qqnorm(residuals(m))
abline(0,1,col='red')
{
plot(residuals(m)~p)
qqnorm(residuals(m))
abline(0,1,col='red')
}
qqnorm(rstudent(m))
{
plot(residuals(m)~p)
qqnorm(rstudent(m))
abline(0,1,col='red')
}
m
m <- lm(IPI ~ age_group + Eth.Groups + dep_group + mode + Parity,data=e )
{
#plot(residuals(m)~p)
qqnorm(rstudent(m))
abline(0,1,col='red')
}
m <- lm(log(IPI) ~ age_group + Eth.Groups + dep_group + mode + Parity,data=e )
p <- predict(m)
{
#plot(residuals(m)~p)
qqnorm(rstudent(m))
abline(0,1,col='red')
}
anova(m)
hist(e$IPI)
m1 <- lm(IPI ~ age_group + Eth.Groups + dep_group + mode + Parity,data=e )
m2 <- lm(log(IPI) ~ age_group + Eth.Groups + dep_group + mode + Parity,data=e )
plot(residuals(m1)~p1)
p1 <- predict(m1)
p2 <- predict(m2)
plot(residuals(m1)~p1)
par(mfrow=c(2,1))
plot(residuals(m1)~p1)
plot(residuals(m2)~p2)
summary(m1)
?scale
mean(scale(e$IPI))
var(scale(e$IPI))
m3 <- lm(scale(IPI) ~ age_group + Eth.Groups + dep_group + mode + Parity,data=e )
plot(residuals(m3)~p3)
p3 <- predict(m3)
plot(residuals(m3)~p3)
summary(m3)
hist(p1)
min(p1)
confint(m1)
summary(m)
summary(m1)
s <- read.csv('/Users/micheldelange/Documents/willemijn/data/EDOR _June 19_2018_15.46.csv',header=T,
stringsAsFactors = F)
## lists all names, which occur in the spreadsheet
library('stringr')
s <- read.csv('/Users/micheldelange/Documents/willemijn/data/EDOR _June 19_2018_15.46.csv',header=T,
stringsAsFactors = F)
dim(s)
colnames(s)
allnames <- vector()
counter <- 0
for (i in 1:dim(s)[1]) {
counter <- counter + 1
allnames <- c(allnames, s[i,"Q1.2"])
for (k in 1:3) {
for (j in 1:20) {
colname <- str_c('Q2.',k,'.1_',j,'_1')
name <- s[i,colname]
counter <- counter + 1
allnames <- unique(c(allnames, name))
}
}
}
fname <- '/Users/micheldelange/Documents/willemijn/data/allnames.csv'
write.csv(allnames,fname)
## names and email addresses
out <- data.frame()
counter <- 0
names <- character()
emails <- character()
for (i in 1:dim(s)[1]) {
counter <- counter + 1
names[counter] <- s[i,"Q1.2"]
emails[counter] <- s[i,"RecipientEmail"]
for (k in 1:3) {
for (j in 1:20) {
colname <- str_c('Q2.',k,'.1_',j,'_1')
if (! is.na(s[i,colname]) & nchar(s[i,colname]) > 1) {
counter <- counter + 1
names[counter] <- s[i,colname]
# email Q2.1#6_1_1
colname <- str_c('Q2.',k,'.6_',j,'_1')
emails[counter] <- s[i,colname]
}
}
}
}
allnamesandemails <- data.frame(names,emails)
fname <- '/Users/micheldelange/Documents/willemijn/data/allnamesandemails.csv'
write.csv(allnamesandemails,fname)
knitr::opts_chunk$set(echo = FALSE)
rm(list = ls())
INCLUDE_METFORMIN <-  F
INCLUDE_METFORMIN
unlink('Dropbox/pumps2/rscripts/pumps2 results_cache', recursive = TRUE)
shiny::runApp('Documents/shiny/ShowData/ShowData')
runApp('Documents/shiny/ShowData/ShowData')
runApp('Documents/shiny/ShowData/ShowData')
runApp('Documents/shiny/ShowData/ShowData')
runApp('Documents/shiny/ShowData/ShowData')
runApp('Documents/shiny/ShowData/ShowData')
runApp('Documents/shiny/ShowData/ShowData')
runApp('Documents/shiny/ShowData/ShowData')
runApp('Documents/shiny/ShowData/ShowData')
runApp('Documents/shiny/ShowData/ShowData')
runApp('Documents/shiny/ShowData/ShowData')
runApp('Documents/shiny/ShowData/ShowData')
runApp('Documents/shiny/ShowData/ShowData')
data1 <- read.csv('weightheight.csv',header=T)
setwd('/Users/micheldelange')
setwd('/Users/micheldelange/Documents/shiny')
setwd('/Users/micheldelange/Documents/shiny/ShowData')
setwd('/Users/micheldelange/Documents/shiny/ShowData/ShowData')
data1 <- read.csv('weightheight.csv',header=T)
colnames(data1)
runApp()
runApp()
runApp()
runApp()
runApp()
?hot_to_r
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/Documents/shiny/Michelsapps')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
?delay
delay(100)
?Sys.sleep
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
s <- round(rnorm(10,1,0))
s(s)
install.packages("gganimate")
install.packages("Gganimate")
if(!require(devtools)) install.packages("devtools")
devtools::install_github("dgrtwo/gganimate")
library(gapminder)
install.packages("gapminder")
library(gapminder)
head(gapminder)
library(gapminder)
library(ggplot2)
library(gganimate)
mapping <- aes(x = gdpPercap, y = lifeExp,
size = pop, color = continent,
frame = year)
p <- ggplot(gapminder, mapping = mapping) +
geom_point() +
scale_x_log10()
gganimate(p)
library(gganimate)
devtools::install_github("dgrtwo/gganimate")
library(devtools)
library(RCurl)
library(httr)
set_config( config( ssl_verifypeer = 0L ) )
devtools::install_github("dgrtwo/gganimate")
devtools::install_github("RcppCore/Rcpp")
devtools::install_github("dgrtwo/gganimate")
install.packages("shinyjs")
library(shinyjs)
runApp('~/Documents/shiny/tryshinyjs')
?click
runApp('~/Documents/shiny/tryshinyjs')
runApp('~/Documents/shiny/central')
?onClick
onclick
?click
?invalidateLater
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
?reactiveVal
runApp('~/Documents/shiny/central')
devtools::install_github("dgrtwo/gganimate")
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
?selectInput
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
?stripchart
hist(c(1,2,3,4,5,6,6,6,6,6,7,8,9,7,8,9,10))
stripchart(c(3,4,5),col='red')
df <- data.frame(sample.mean = allmeansamp)
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
?reactiveValues
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/reactivevaluesexample')
runApp('~/Documents/shiny/reactivevaluesexample')
runApp('~/Documents/shiny/reactivevaluesexample')
runApp('~/Documents/shiny/reactivevaluesexample')
runApp('~/Documents/shiny/reactivevaluesexample')
?reactive
runApp('~/Documents/shiny/ggplotshiny')
runApp('~/Documents/shiny/ggplotshiny')
runApp('~/Documents/shiny/ggplotshiny')
runApp('~/Documents/shiny/ggplotshiny')
runApp('~/Documents/shiny/ggplotshiny')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
c <- c(1,2,3)
c[-1]
?geom_label
runApp('~/Documents/shiny/ggplotshiny')
runApp('~/Documents/shiny/ggplotshiny')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
library(stringr)
runApp('~/Documents/shiny/central')
??stringi
str_c('mean: ',m.hat )
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
?stat_function
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
?geom_jitter
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
?scale_x_continuous
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
?stripchart
??`ggplot2-package`
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
runApp('~/Documents/shiny/central')
install.packages("Rcpp")
install.packages("Rcpp")
