median(gamma.upper-gamma.lower,na.rm=T)
# plot estimates of phihat's
#par(mfrow=c(2,2))
{
print(paste(phi,
round(mean((n-p)*phihats1/phi),2),
round(var((n-p)*phihats1/phi),2),
round(mean((n-p)*phihats2/phi),2),
round(var((n-p)*phihats2/phi),2),
sep='   '))
main=paste('phi=',phi)
hist((n-p)*phihats2/phi,probability = T,
main=main,ylim=c(0,0.1),
xlim=c(0,2 * n),100)
c<- seq(0,qchisq(0.9999,df),0.1)
y1<-dchisq(c,df=n-p)
lines(c,y1,col='red')
#y2<- dgamma(c,shape=mean(ks),scale=mean(thetas))
#lines(c,y2,col='blue')
#legend(50,0.08,
#       c("gamma","chisq"),
#       lty=c(1,1),
#       lwd=c(2.5,2.5),
#       col=c("blue","red"))
}
}
e2
plotCIs <- function(low,upp,err,phihat,truePhi,plotN,main,
errRate) {
plot('',xlim=c(0,plotN),ylim=c(0,4*truePhi),
main=paste(main,'true phi=',truePhi,sep=' '),
ylab="95% CI")
abline(h=truePhi,col='red')
for (i in 1:plotN) {
col <- 'black'
if (err[i] == 1) {
col <- 'red'
}
segments(i,low[i],i,upp[i],col=col)
points(i,phihat[i],pch='.',cex=3)
text(60,3.5 * truePhi,paste("error rate: ",errRate))
}
}
plotCIs(lower.1,upper.1,err.1,phihats1,phi,plotN=100,
main="Chisq, phihat1",e1)
for (sim in 1:N) {
if (phi==1) {
y<-rpois(n,mu) }
else {
#y<-rnegbin(n,mu,mn) # negative binomial
y<-rpois(n,rpois(n,mn)*nu)             # Neyman Type A
#y<-rpois(n,rlnorm(n,mx,sx))            # Poisson lognormal
#y<-rpois(n,rinvgauss(n,1,1/mn)*mu)     # Poisson inverse Gaussian
}
muhat<-fitted(glm(y~x,family="poisson"))
P<-sum((y-muhat)^2/muhat)
sbar<-mean((y-muhat)/muhat)
phihat1<-P/(n-p)
phihat2<-phihat1/(1+sbar)
phihats1[sim] <- phihat1
phihats2[sim] <- phihat2
# chisquare CI
df <- n-p
lower.1[sim] <- df * phihat1  / qchisq(0.975,df=df)
upper.1[sim] <- df * phihat1  / qchisq(0.025,df=df)
lower.2[sim] <- df * phihat2  / qchisq(0.975,df=df)
upper.2[sim] <- df * phihat2  / qchisq(0.025,df=df)
err.1[sim] <- 0
if (phi < lower.1[sim] | phi > upper.1[sim]) {
err.1[sim] <-  1
}
err.2[sim] <- 0
if (phi < lower.2[sim] | phi > upper.2[sim]) {
err.2[sim] <-  1
}
## Gamma CI. only for phihat2
e <- (y-muhat)/sqrt(phihat2 * muhat)
rho3 <- e^3
rho4 <- e^4 - 3
alpha.bar <- mean(rho4 + phihat2/muhat - 2 * sqrt(phihat2/muhat) * rho3)
theta <- 2 + alpha.bar
k <- df/(2+alpha.bar)
thetas[sim] <- theta
ks[sim] <- k
#gamma.lower[sim] <- df * phihat2  / qgamma(0.975,
#                                         shape=k,
#                                         scale=theta)
##gamma.upper[sim] <- df * phihat2  / qgamma(0.025,
#                                         shape=k,
#                                         scale=theta)
#gamma.err[sim] <- (phi < gamma.lower[sim]) |
#             (phi > gamma.upper[sim])
}
e2 <- sum(err.2)/N
e2
for (sim in 1:N) {
if (phi==1) {
y<-rpois(n,mu) }
else {
#y<-rnegbin(n,mu,mn) # negative binomial
#y<-rpois(n,rpois(n,mn)*nu)             # Neyman Type A
y<-rpois(n,rlnorm(n,mx,sx))            # Poisson lognormal
#y<-rpois(n,rinvgauss(n,1,1/mn)*mu)     # Poisson inverse Gaussian
}
muhat<-fitted(glm(y~x,family="poisson"))
P<-sum((y-muhat)^2/muhat)
sbar<-mean((y-muhat)/muhat)
phihat1<-P/(n-p)
phihat2<-phihat1/(1+sbar)
phihats1[sim] <- phihat1
phihats2[sim] <- phihat2
# chisquare CI
df <- n-p
lower.1[sim] <- df * phihat1  / qchisq(0.975,df=df)
upper.1[sim] <- df * phihat1  / qchisq(0.025,df=df)
lower.2[sim] <- df * phihat2  / qchisq(0.975,df=df)
upper.2[sim] <- df * phihat2  / qchisq(0.025,df=df)
err.1[sim] <- 0
if (phi < lower.1[sim] | phi > upper.1[sim]) {
err.1[sim] <-  1
}
err.2[sim] <- 0
if (phi < lower.2[sim] | phi > upper.2[sim]) {
err.2[sim] <-  1
}
## Gamma CI. only for phihat2
e <- (y-muhat)/sqrt(phihat2 * muhat)
rho3 <- e^3
rho4 <- e^4 - 3
alpha.bar <- mean(rho4 + phihat2/muhat - 2 * sqrt(phihat2/muhat) * rho3)
theta <- 2 + alpha.bar
k <- df/(2+alpha.bar)
thetas[sim] <- theta
ks[sim] <- k
#gamma.lower[sim] <- df * phihat2  / qgamma(0.975,
#                                         shape=k,
#                                         scale=theta)
##gamma.upper[sim] <- df * phihat2  / qgamma(0.025,
#                                         shape=k,
#                                         scale=theta)
#gamma.err[sim] <- (phi < gamma.lower[sim]) |
#             (phi > gamma.upper[sim])
}
e2 <- sum(err.2)/N
e2
for (sim in 1:N) {
if (phi==1) {
y<-rpois(n,mu) }
else {
#y<-rnegbin(n,mu,mn) # negative binomial
#y<-rpois(n,rpois(n,mn)*nu)             # Neyman Type A
#y<-rpois(n,rlnorm(n,mx,sx))            # Poisson lognormal
y<-rpois(n,rinvgauss(n,1,1/mn)*mu)     # Poisson inverse Gaussian
}
muhat<-fitted(glm(y~x,family="poisson"))
P<-sum((y-muhat)^2/muhat)
sbar<-mean((y-muhat)/muhat)
phihat1<-P/(n-p)
phihat2<-phihat1/(1+sbar)
phihats1[sim] <- phihat1
phihats2[sim] <- phihat2
# chisquare CI
df <- n-p
lower.1[sim] <- df * phihat1  / qchisq(0.975,df=df)
upper.1[sim] <- df * phihat1  / qchisq(0.025,df=df)
lower.2[sim] <- df * phihat2  / qchisq(0.975,df=df)
upper.2[sim] <- df * phihat2  / qchisq(0.025,df=df)
err.1[sim] <- 0
if (phi < lower.1[sim] | phi > upper.1[sim]) {
err.1[sim] <-  1
}
err.2[sim] <- 0
if (phi < lower.2[sim] | phi > upper.2[sim]) {
err.2[sim] <-  1
}
## Gamma CI. only for phihat2
e <- (y-muhat)/sqrt(phihat2 * muhat)
rho3 <- e^3
rho4 <- e^4 - 3
alpha.bar <- mean(rho4 + phihat2/muhat - 2 * sqrt(phihat2/muhat) * rho3)
theta <- 2 + alpha.bar
k <- df/(2+alpha.bar)
thetas[sim] <- theta
ks[sim] <- k
#gamma.lower[sim] <- df * phihat2  / qgamma(0.975,
#                                         shape=k,
#                                         scale=theta)
##gamma.upper[sim] <- df * phihat2  / qgamma(0.025,
#                                         shape=k,
#                                         scale=theta)
#gamma.err[sim] <- (phi < gamma.lower[sim]) |
#             (phi > gamma.upper[sim])
}
e2 <- sum(err.2)/N
e2
for (sim in 1:N) {
if (phi==1) {
y<-rpois(n,mu) }
else {
y<-rnegbin(n,mu,mn) # negative binomial
#y<-rpois(n,rpois(n,mn)*nu)             # Neyman Type A
#y<-rpois(n,rlnorm(n,mx,sx))            # Poisson lognormal
#y<-rpois(n,rinvgauss(n,1,1/mn)*mu)     # Poisson inverse Gaussian
}
muhat<-fitted(glm(y~x,family="poisson"))
P<-sum((y-muhat)^2/muhat)
sbar<-mean((y-muhat)/muhat)
phihat1<-P/(n-p)
phihat2<-phihat1/(1+sbar)
phihats1[sim] <- phihat1
phihats2[sim] <- phihat2
# chisquare CI
df <- n-p
lower.1[sim] <- df * phihat1  / qchisq(0.975,df=df)
upper.1[sim] <- df * phihat1  / qchisq(0.025,df=df)
lower.2[sim] <- df * phihat2  / qchisq(0.975,df=df)
upper.2[sim] <- df * phihat2  / qchisq(0.025,df=df)
err.1[sim] <- 0
if (phi < lower.1[sim] | phi > upper.1[sim]) {
err.1[sim] <-  1
}
err.2[sim] <- 0
if (phi < lower.2[sim] | phi > upper.2[sim]) {
err.2[sim] <-  1
}
## Gamma CI. only for phihat2
e <- (y-muhat)/sqrt(phihat2 * muhat)
rho3 <- e^3
rho4 <- e^4 - 3
alpha.bar <- mean(rho4 + phihat2/muhat - 2 * sqrt(phihat2/muhat) * rho3)
theta <- 2 + alpha.bar
k <- df/(2+alpha.bar)
thetas[sim] <- theta
ks[sim] <- k
#gamma.lower[sim] <- df * phihat2  / qgamma(0.975,
#                                         shape=k,
#                                         scale=theta)
##gamma.upper[sim] <- df * phihat2  / qgamma(0.025,
#                                         shape=k,
#                                         scale=theta)
#gamma.err[sim] <- (phi < gamma.lower[sim]) |
#             (phi > gamma.upper[sim])
}
e2 <- sum(err.2)/N
e2
main=paste('phi=',phi)
hist((n-p)*phihats2/phi,probability = T,
main=main,ylim=c(0,0.1),
xlim=c(0,2 * n),100)
c<- seq(0,qchisq(0.9999,df),0.1)
y1<-dchisq(c,df=n-p)
lines(c,y1,col='red')
mu
phi = 10
for (sim in 1:N) {
if (phi==1) {
y<-rpois(n,mu) }
else {
y<-rnegbin(n,mu,mn) # negative binomial
#y<-rpois(n,rpois(n,mn)*nu)             # Neyman Type A
#y<-rpois(n,rlnorm(n,mx,sx))            # Poisson lognormal
#y<-rpois(n,rinvgauss(n,1,1/mn)*mu)     # Poisson inverse Gaussian
}
muhat<-fitted(glm(y~x,family="poisson"))
P<-sum((y-muhat)^2/muhat)
sbar<-mean((y-muhat)/muhat)
phihat1<-P/(n-p)
phihat2<-phihat1/(1+sbar)
phihats1[sim] <- phihat1
phihats2[sim] <- phihat2
# chisquare CI
df <- n-p
lower.1[sim] <- df * phihat1  / qchisq(0.975,df=df)
upper.1[sim] <- df * phihat1  / qchisq(0.025,df=df)
lower.2[sim] <- df * phihat2  / qchisq(0.975,df=df)
upper.2[sim] <- df * phihat2  / qchisq(0.025,df=df)
err.1[sim] <- 0
if (phi < lower.1[sim] | phi > upper.1[sim]) {
err.1[sim] <-  1
}
err.2[sim] <- 0
if (phi < lower.2[sim] | phi > upper.2[sim]) {
err.2[sim] <-  1
}
## Gamma CI. only for phihat2
e <- (y-muhat)/sqrt(phihat2 * muhat)
rho3 <- e^3
rho4 <- e^4 - 3
alpha.bar <- mean(rho4 + phihat2/muhat - 2 * sqrt(phihat2/muhat) * rho3)
theta <- 2 + alpha.bar
k <- df/(2+alpha.bar)
thetas[sim] <- theta
ks[sim] <- k
#gamma.lower[sim] <- df * phihat2  / qgamma(0.975,
#                                         shape=k,
#                                         scale=theta)
##gamma.upper[sim] <- df * phihat2  / qgamma(0.025,
#                                         shape=k,
#                                         scale=theta)
#gamma.err[sim] <- (phi < gamma.lower[sim]) |
#             (phi > gamma.upper[sim])
}
e2
hist((n-p)*phihats2/phi,probability = T,
main=main,ylim=c(0,0.1),
xlim=c(0,2 * n),100)
hist((n-p)*phihats2/phi,probability = T,
main=main,ylim=c(0,0.2),
xlim=c(0,2 * n),100)
par(mfrow=c(1,1))
hist((n-p)*phihats2/phi,probability = T,
main=main,ylim=c(0,0.3),
xlim=c(0,2 * n),100)
hist((n-p)*phihats2/phi,probability = T,
main=main,ylim=c(0,0.4),
xlim=c(0,2 * n),100)
c<- seq(0,qchisq(0.9999,df),0.1)
y1<-dchisq(c,df=n-p)
lines(c,y1,col='red')
runApp('Documents/shiny/app1')
runApp('Documents/shiny/app2')
ggplot(data=d, aes(height,
x = factor(sex), y = height)) +
geom_dotplot(aes(group=sex),dotsize=0.3,stackdir="up"
)
d <- data.frame(result)
result[51:90,"sex"] <-  rnorm(40,1910,90)
d <- data.frame(result)
head(d)
ggplot(mtcars, aes(y = factor(cyl), x = mpg))
ggplot(data=d, aes(height,
x = factor(sex), y = height)) +
geom_dotplot(aes(group=sex),dotsize=0.3,stackdir="up"
)
ggplot(data=d, aes(height,
x = factor(sex), y = height)) +
geom_dotplot(aes(group=sex),dotsize=0.3,stackdir="up"
)
d <- data.frame(result)
d <- data.frame(result)
result[51:90,"sex"] <-  rnorm(40,1910,90)
result <- data.frame(height=c(round(rnorm(90,1710,90))))
{
result <- data.frame(height=c(round(rnorm(90,1710,90))))
# 2 people who put in cm instead of mm
result
dim(result)
result$sex <- 'male'
result[51:90,"sex"] <- 'female'
result[51:90,"sex"] <-  rnorm(40,1910,90)
library(ggplot2)
d <- data.frame(result)
head(d)
#ggplot(mtcars, aes(y = factor(cyl), x = mpg))
ggplot(data=d, aes(height,
x = factor(sex), y = height)) +
geom_dotplot(aes(group=sex),dotsize=0.3,stackdir="up"
)
}
{
result <- data.frame(height=c(round(rnorm(90,1710,90))))
# 2 people who put in cm instead of mm
result
dim(result)
result$sex <- 'male'
result[51:90,"sex"] <- 'female'
result[51:90,"sex"] <-  rnorm(40,1910,90)
library(ggplot2)
d <- data.frame(result)
head(d)
#ggplot(mtcars, aes(y = factor(cyl), x = mpg))
ggplot(data=d, aes(height,
x = factor(sex), y = height)) +
geom_dotplot(aes(group=sex),dotsize=0.3,stackdir="up"
)
}
d <- data.frame(result)
head(d)
ggplot(data=d, aes(height,
x = factor(sex), y = height)) +
geom_dotplot(aes(group=sex),dotsize=0.3
)
ggplot(data=d, aes(
x = factor(sex), y = height)) +
geom_dotplot(aes(group=sex),dotsize=0.3
)
ggplot(data=d, aes(x = factor(sex), y = height)) +
geom_dotplot(dotsize=0.3
)
{
result <- data.frame(height=c(round(rnorm(90,1710,90))))
result
dim(result)
result$sex <- 'male'
result[51:90,"sex"] <- 'female'
result[51:90,"sex"] <-  rnorm(40,1910,90)
library(ggplot2)
d <- data.frame(result)
head(d)
ggplot(data=d, aes(x = factor(sex), y = height)) +
geom_dotplot(
)
}
head(d)
ggplot(data=d) + geom_dotplot()
d <- data.frame(x=rnorm(100))
ggplot(data=d) + geom_dotplot()
ggplot(data=d) + geom_dotplot(aes(x=x))
ggplot(data=d) + geom_dotplot(aes(x=x, color='red'))
ggplot(data=d) + geom_dotplot(aes(x=x, color='red',fill='red'))
ggplot(data=d) + geom_dotplot(aes(x=x, color='grey',fill='red'))
ggplot(data=d) + geom_dotplot(aes(x=x, color='grey',fill='grey'))
ggplot(data=d) + geom_dotplot(aes(x=x, color='grey',fill='blue'))
d <- data.frame(x=rnorm(100))
ggplot(data=d) + geom_dotplot(aes(x=x, color='grey',fill='blue'))
ggplot(data=d) + geom_dotplot(aes(x=x, color='red',fill='red'))
ggplot(data=d) + geom_dotplot(aes(x=x), color='red',fill='red')
col = 'grey'
d <- data.frame(x=rnorm(100))
ggplot(data=d) + geom_dotplot(aes(x=x), color='grey',fill='grey')
col = 'gray'
d <- data.frame(x=rnorm(100))
ggplot(data=d) + geom_dotplot(aes(x=x), color='col',fill='col')
palette()
col = 'gray'
d <- data.frame(x=rnorm(100))
ggplot(data=d) + geom_dotplot(aes(x=x), color='col',fill='col')
ggplot(data=d) + geom_dotplot(aes(x=x), color=col,fill=col)
runApp('Documents/shiny/app2')
col = '#FF0000'
d <- data.frame(x=rnorm(100))
ggplot(data=d) + geom_dotplot(aes(x=x), color=col,fill=col)
col = '#FFff00'
d <- data.frame(x=rnorm(100))
ggplot(data=d) + geom_dotplot(aes(x=x), color=col,fill=col)
col = '#202020'
d <- data.frame(x=rnorm(100))
ggplot(data=d) + geom_dotplot(aes(x=x), color=col,fill=col)
col = '#303030'
d <- data.frame(x=rnorm(100))
ggplot(data=d) + geom_dotplot(aes(x=x), color=col,fill=col)
runApp('Documents/shiny/app2')
col = '#1503030'
d <- data.frame(x=rnorm(100))
ggplot(data=d) + geom_dotplot(aes(x=x), color=col,fill=col)
col = '#803030'
d <- data.frame(x=rnorm(100))
ggplot(data=d) + geom_dotplot(aes(x=x), color=col,fill=col)
col = '#808030'
d <- data.frame(x=rnorm(100))
ggplot(data=d) + geom_dotplot(aes(x=x), color=col,fill=col)
col = '#404030'
d <- data.frame(x=rnorm(100))
ggplot(data=d) + geom_dotplot(aes(x=x), color=col,fill=col)
col = '#000000'
d <- data.frame(x=rnorm(100))
ggplot(data=d) + geom_dotplot(aes(x=x), color=col,fill=col)
col = '#404040'
d <- data.frame(x=rnorm(100))
ggplot(data=d) + geom_dotplot(aes(x=x), color=col,fill=col)
col = '#404030'
d <- data.frame(x=rnorm(100))
ggplot(data=d) + geom_dotplot(aes(x=x), color=col,fill=col)
col = '#303030'
d <- data.frame(x=rnorm(100))
ggplot(data=d) + geom_dotplot(aes(x=x), color=col,fill=col)
col = '#000000'
d <- data.frame(x=rnorm(100))
ggplot(data=d) + geom_dotplot(aes(x=x), color=col,fill=col)
col = '#303030'
d <- data.frame(x=rnorm(100))
ggplot(data=d) + geom_dotplot(aes(x=x), color=col,fill=col)
runApp('Documents/shiny/app2')
runApp('Documents/shiny/app3')
runApp('Documents/shiny/app4')
runApp('Documents/shiny/app5')
palette()
runApp('Documents/shiny/app5')
runApp('Documents/shiny/app6')
runApp('Documents/shiny/app6')
runApp('Documents/shiny/app12a')
runApp('Documents/shiny/app6')
runApp('Documents/shiny/app12a')
runApp('Documents/shiny/app12a')
runApp('Documents/shiny/app6c')
clear
c
runApp('Documents/shiny/app6c')
runApp('Documents/shiny/app6c')
runApp('Documents/shiny/app6c')
runApp('Documents/shiny/app7b')
runApp('Documents/shiny/app6c')
runApp('Documents/shiny/app7b')
runApp('Documents/shiny/app8')
runApp('Documents/shiny/app2')
runApp('Documents/shiny/app7b')
runApp('Documents/shiny/app2')
runApp('Documents/shiny/app7b')
runApp('Documents/shiny/app16')
x = rbinom(boys.post.n,size=9,prob=1.3/9)
x = rbinom(100,size=9,prob=1.3/9)
y = rbinom(100,size=9,prob=1.3/9)
t.text(x,y)
t.test(x,y)
t <- t.test(x,y)
t$conf.int[1]
runApp('Documents/shiny/app16')
runApp('Documents/shiny/app2')
runApp('Documents/shiny/app4')
runApp('Documents/shiny/app2')
runApp('Documents/shiny/app5')
runApp('Documents/shiny/app12')
