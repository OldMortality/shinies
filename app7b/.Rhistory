ts[i] <- t$estimate
ps[i] <- t$p.value
}
hist(ts)
for (i in 1:10000) {
x1 <- rbinom(N,M,p=0.5)
x2 <- rbinom(N,M,p=0.6)
p1 <- x1/M
p2 <- x2/M
#l1 <- log(p1/(1-p1))
#l2 <- log(p2/(1-p2))
t <- t.test(p1-p2)
ts[i] <- t$estimate
ps[i] <- t$p.value
}
hist(ts)
sum(ps<0.05)/10000
hist(ps)
N <- 100
M <- 6
ts <- vector()
ps <- vector()
for (i in 1:10000) {
x1 <- rbinom(N,M,p=0.5)
x2 <- rbinom(N,M,p=0.6)
p1 <- x1/M
p2 <- x2/M
#l1 <- log(p1/(1-p1))
#l2 <- log(p2/(1-p2))
t <- t.test(p1-p2)
ts[i] <- t$estimate
ps[i] <- t$p.value
}
hist(ts)
quantile(ts,0.025)
quantile(ts,0.975)
hist(ps)
sum(ps<0.05)/10000
N <- 30
M <- 6
ts <- vector()
ps <- vector()
for (i in 1:10000) {
x1 <- rbinom(N,M,p=0.5)
x2 <- rbinom(N,M,p=0.6)
p1 <- x1/M
p2 <- x2/M
#l1 <- log(p1/(1-p1))
#l2 <- log(p2/(1-p2))
t <- t.test(p1-p2)
ts[i] <- t$estimate
ps[i] <- t$p.value
}
N <- 30
M <- 6
ts <- vector()
ps <- vector()
for (i in 1:10000) {
x1 <- rbinom(N,M,p=0.5)
x2 <- rbinom(N,M,p=0.5)
p1 <- x1/M
p2 <- x2/M
#l1 <- log(p1/(1-p1))
#l2 <- log(p2/(1-p2))
t <- t.test(p1-p2)
ts[i] <- t$estimate
ps[i] <- t$p.value
}
hist(ps)
sum(ps<0.05)/10000
sum(ps<0.05)/10000
ts <- vector()
ps <- vector()
for (i in 1:10000) {
x1 <- rbinom(N,M,p=0.5)
x2 <- rbinom(N,M,p=0.5)
p1 <- x1/M
p2 <- x2/M
#l1 <- log(p1/(1-p1))
#l2 <- log(p2/(1-p2))
t <- t.test(p1-p2,paired=T)
ts[i] <- t$estimate
ps[i] <- t$p.value
}
N <- 30
M <- 6
ts <- vector()
ps <- vector()
for (i in 1:10000) {
x1 <- rbinom(N,M,p=0.5)
x2 <- rbinom(N,M,p=0.5)
p1 <- x1/M
p2 <- x2/M
#l1 <- log(p1/(1-p1))
#l2 <- log(p2/(1-p2))
t <- t.test(p1,p2,paired=T)
ts[i] <- t$estimate
ps[i] <- t$p.value
}
hist(ts)
hist(ps)
sum(ps<0.05)/10000
l1s <- vector()
l12 <- vector()
for (i in 1:10000) {
x1 <- rbinom(N,M,p=0.5)
x2 <- rbinom(N,M,p=0.5)
p1 <- x1/M
p2 <- x2/M
l1s[i] <- log(p1/(1-p1))
l2s[i] <- log(p2/(1-p2))
#t <- t.test(l1.l2)
#ts[i] <- t$estimate
#ps[i] <- t$p.value
}
N <- 30
M <- 30
ts <- vector()
ps <- vector()
l1s <- vector()
l12 <- vector()
for (i in 1:10000) {
x1 <- rbinom(N,M,p=0.5)
x2 <- rbinom(N,M,p=0.5)
p1 <- x1/M
p2 <- x2/M
l1s[i] <- log(p1/(1-p1))
l2s[i] <- log(p2/(1-p2))
#t <- t.test(l1.l2)
#ts[i] <- t$estimate
#ps[i] <- t$p.value
}
log(p1/(1-p1))
x1
N <- 30
M <- 6
ts <- vector()
ps <- vector()
l1s <- vector()
l12 <- vector()
for (i in 1:10000) {
x1 <- rbinom(1,M,p=0.5)
x2 <- rbinom(1,M,p=0.5)
p1 <- x1/M
p2 <- x2/M
#l1s[i] <- log(p1/(1-p1))
#l2s[i] <- log(p2/(1-p2))
t <- t.test(p1-p2)
#ts[i] <- t$estimate
#ps[i] <- t$p.value
}
p1
x1 <- rbinom(N,M,p=0.5)
x2 <- rbinom(N,M,p=0.5)
p1 <- x1/M
p2 <- x2/M
p1
l1s[i] <- log(p1/(1-p1))
log(p1/(1-p1))
ors <- vector()
l12 <- vector()
for (i in 1:10000) {
x1 <- rbinom(N,M,p=0.5)
x2 <- rbinom(N,M,p=0.5)
p1 <- x1/M
p2 <- x2/M
ors[i] <- log(p1/(1-p1))/log(p2/(1-p2))
t <- t.test(p1-p2)
#ts[i] <- t$estimate
#ps[i] <- t$p.value
}
hist(ors)
ors
N <- 30
M <- 16
ts <- vector()
ps <- vector()
ors <- vector()
l12 <- vector()
for (i in 1:10000) {
x1 <- rbinom(N,M,p=0.5)
x2 <- rbinom(N,M,p=0.5)
p1 <- x1/M
p2 <- x2/M
ors[i] <- log(p1/(1-p1))/log(p2/(1-p2))
t <- t.test(p1-p2)
#ts[i] <- t$estimate
#ps[i] <- t$p.value
}
ors
hist(ors)
library(MASS)
?rmvn
?MASS
??MASS
ro = 0.7
x <- mvrnorm(n = 1, mu, Sigma=matrix(1,ro,-ro,1),nrow=2 )
x <- mvrnorm(n = 1, mu, Sigma=matrix(c(1,ro,-ro,1),nrow=2 ))
x <- mvrnorm(n = 1, 0.5, Sigma=matrix(c(1,ro,-ro,1),nrow=2 ))
x <- mvrnorm(n = 2, mu = 0.5 0.5, Sigma=matrix(c(1,ro,-ro,1),nrow=2 ))
x <- mvrnorm(100, n = 2, mu = 0.5 0.5, Sigma=matrix(c(1,ro,-ro,1),nrow=2 ))
x <- mvrnorm(100, n = 2, mu = c(0.5,0.6) , Sigma=matrix(c(1,ro,-ro,1),nrow=2 ))
x
x <- rmvrnorm(100, n = 2, mu = c(0.5,0.6) , Sigma=matrix(c(1,ro,-ro,1),nrow=2 ))
?mvrnorm
x <- mvrnorm(100, mu = c(0.5,0.6) , Sigma=matrix(c(1,ro,-ro,1),nrow=2 ))
x
x1 <- x[,1]
x2 <- x[,2]
p1 <- x1/M
for (i in 1:10000) {
x <- mvrnorm(M, mu = c(0.5,0.6) , Sigma=matrix(c(1,ro,-ro,1),nrow=2 ))
x1 <- x[,1]
x2 <- x[,2]
p1 <- x1/M
p2 <- x2/M
ors[i] <- log(p1/(1-p1))/log(p2/(1-p2))
t <- t.test(p1-p2)
#ts[i] <- t$estimate
#ps[i] <- t$p.value
}
M = 30
for (i in 1:10000) {
x <- mvrnorm(M, mu = c(0.5,0.6) , Sigma=matrix(c(1,ro,-ro,1),nrow=2 ))
x1 <- x[,1]
x2 <- x[,2]
p1 <- x1/M
p2 <- x2/M
ors[i] <- log(p1/(1-p1))/log(p2/(1-p2))
t <- t.test(p1-p2)
#ts[i] <- t$estimate
#ps[i] <- t$p.value
}
ro = 0.7
M = 100
for (i in 1:10000) {
x <- mvrnorm(M, mu = c(0.5,0.6) , Sigma=matrix(c(1,ro,-ro,1),nrow=2 ))
x1 <- x[,1]
x2 <- x[,2]
p1 <- x1/M
p2 <- x2/M
#ors[i] <- log(p1/(1-p1))/log(p2/(1-p2))
t <- t.test(p1-p2)
#ts[i] <- t$estimate
#ps[i] <- t$p.value
}
hist(ts)
ts <- vector()
for (i in 1:10000) {
x <- mvrnorm(M, mu = c(0.5,0.6) , Sigma=matrix(c(1,ro,-ro,1),nrow=2 ))
x1 <- x[,1]
x2 <- x[,2]
p1 <- x1/M
p2 <- x2/M
#ors[i] <- log(p1/(1-p1))/log(p2/(1-p2))
ts[i] <- t.test(p1-p2)
#ts[i] <- t$estimate
#ps[i] <- t$p.value
}
warnings()
p1
p2
p1-p2
i
t.test(p1-p2)
t <- t.test(p1-p2)$p
ts <- vector()
for (i in 1:10000) {
x <- mvrnorm(M, mu = c(0.5,0.6) , Sigma=matrix(c(1,ro,-ro,1),nrow=2 ))
x1 <- x[,1]
x2 <- x[,2]
p1 <- x1/M
p2 <- x2/M
#ors[i] <- log(p1/(1-p1))/log(p2/(1-p2))
t <- t.test(p1-p2)$p
ts[i] <- t$estimate
#ps[i] <- t$p.value
}
whist(ts)
hist(ts)
ps <- vector()
#ts[i] <- t$estimate
ps[i] <- t$p.value
for (i in 1:10000) {
x <- mvrnorm(M, mu = c(0.5,0.6) , Sigma=matrix(c(1,ro,-ro,1),nrow=2 ))
x1 <- x[,1]
x2 <- x[,2]
p1 <- x1/M
p2 <- x2/M
#ors[i] <- log(p1/(1-p1))/log(p2/(1-p2))
t <- t.test(p1-p2)$p
#ts[i] <- t$estimate
ps[i] <- t$p.value
}
hist(ps)
ps
t$p.value
t$p.val
t
t <- t.test(p1-p2)$p
t$p.val
#ts[i] <- t$estimate
ps[i] <- t$p.value
ps[i]
t$p.value
t
t <- t.test(p1-p2)$p
t
p1
p2
t <- t.test(p1-p2)
#ts[i] <- t$estimate
ps[i] <- t$p.value
ps[i]
for (i in 1:10000) {
x <- mvrnorm(M, mu = c(0.5,0.6) , Sigma=matrix(c(1,ro,-ro,1),nrow=2 ))
x1 <- x[,1]
x2 <- x[,2]
p1 <- x1/M
p2 <- x2/M
#ors[i] <- log(p1/(1-p1))/log(p2/(1-p2))
t <- t.test(p1-p2)
#ts[i] <- t$estimate
ps[i] <- t$p.value
}
hist(ps)
sum(ps<0.05)/10000
hist(ps)
for (i in 1:10000) {
x <- mvrnorm(M, mu = c(0.5,0.6) , Sigma=matrix(c(1,ro,-ro,1),nrow=2 ))
x1 <- x[,1]
x2 <- x[,2]
p1 <- x1/M
p2 <- x2/M
#ors[i] <- log(p1/(1-p1))/log(p2/(1-p2))
t <- t.test(p1-p2)
ts[i] <- t$estimate
ps[i] <- t$p.value
}
hist(ts)
ro = 0
M = 100
ts <- vector()
ps <- vector()
for (i in 1:10000) {
x <- mvrnorm(M, mu = c(0.5,0.6) , Sigma=matrix(c(1,ro,-ro,1),nrow=2 ))
x1 <- x[,1]
x2 <- x[,2]
p1 <- x1/M
p2 <- x2/M
#ors[i] <- log(p1/(1-p1))/log(p2/(1-p2))
t <- t.test(p1-p2)
ts[i] <- t$estimate
ps[i] <- t$p.value
}
hist(ts)
mean(x1)
mean(x2)
sum(ps<0.05)/10000
ro = 0.7
M = 100
ts <- vector()
ps <- vector()
for (i in 1:10000) {
x <- mvrnorm(M, mu = c(0.5,0.6) , Sigma=matrix(c(1,ro,-ro,1),nrow=2 ))
x1 <- x[,1]
x2 <- x[,2]
p1 <- x1/M
p2 <- x2/M
#ors[i] <- log(p1/(1-p1))/log(p2/(1-p2))
t <- t.test(p1-p2)
ts[i] <- t$estimate
ps[i] <- t$p.value
}
sum(ps<0.05)/10000
for (i in 1:10000) {
x1 <- rbinom(N,M,p=0.5)
x2 <- rbinom(N,M,p=0.5)
p1 <- x1/M
p2 <- x2/M
ors[i] <- log(p1/(1-p1))/log(p2/(1-p2))
t <- t.test(p1-p2)
#ts[i] <- t$estimate
#ps[i] <- t$p.value
}
ts <- vector()
ps <- vector()
ors <- vector()
l12 <- vector()
library(MASS)
for (i in 1:10000) {
x1 <- rbinom(N,M,p=0.5)
x2 <- rbinom(N,M,p=0.5)
p1 <- x1/M
p2 <- x2/M
ors[i] <- log(p1/(1-p1))/log(p2/(1-p2))
t <- t.test(p1-p2)
#ts[i] <- t$estimate
#ps[i] <- t$p.value
}
warnings()
for (i in 1:10000) {
x1 <- rbinom(N,M,p=0.5)
x2 <- rbinom(N,M,p=0.5)
p1 <- x1/M
p2 <- x2/M
#ors[i] <- log(p1/(1-p1))/log(p2/(1-p2))
t <- t.test(p1-p2)
#ts[i] <- t$estimate
ps[i] <- t$p.value
}
for (i in 1:10000) {
x1 <- rbinom(N,M,p=0.5)
x2 <- rbinom(N,M,p=0.6)
p1 <- x1/M
p2 <- x2/M
#ors[i] <- log(p1/(1-p1))/log(p2/(1-p2))
t <- t.test(p1-p2)
#ts[i] <- t$estimate
ps[i] <- t$p.value
}
sum(ps<0.05)/10000
x <- mvrnorm(M, mu = c(0.5,0.6) , Sigma=matrix(c(1,ro,-ro,1),nrow=2 ))
x1 <- x[,1]
x2 <- x[,2]
cor(x1,x2)
x <- mvrnorm(M, mu = c(0.5,0.6) , Sigma=matrix(c(1,ro^2,-ro^2,1),nrow=2 ))
x1 <- x[,1]
x2 <- x[,2]
cor(x1,x2)
x <- mvrnorm(M, mu = c(0.5,0.6) , Sigma=matrix(c(1,ro,-ro,1),nrow=2 ))
x1 <- x[,1]
x2 <- x[,2]
cor(x1,x2)
p1 <- x1/M
p2 <- x2/M
x <- mvrnorm(M, mu = c(0.5,0.6) , Sigma=matrix(c(1,ro,-ro,1),nrow=2 ))
x1 <- x[,1]
x2 <- x[,2]
cor(x1,x2)
p1 <- x1/M
p2 <- x2/M
t <- t.test(p1-p2)
ts[i] <- t$estimate
ps[i] <- t$p.value
hist(ts)
for (i in 1:10000) {
x <- mvrnorm(M, mu = c(0.5,0.6) , Sigma=matrix(c(1,ro,-ro,1),nrow=2 ))
x1 <- x[,1]
x2 <- x[,2]
cor(x1,x2)
p1 <- x1/M
p2 <- x2/M
#ors[i] <- log(p1/(1-p1))/log(p2/(1-p2))
t <- t.test(p1-p2)
ts[i] <- t$estimate
ps[i] <- t$p.value
}
hist(ts)
sum(ps<0.05)/10000
M = 1000
ts <- vector()
ps <- vector()
for (i in 1:10000) {
x <- mvrnorm(M, mu = c(0.5,0.6) , Sigma=matrix(c(1,ro,-ro,1),nrow=2 ))
x1 <- x[,1]
x2 <- x[,2]
cor(x1,x2)
p1 <- x1/M
p2 <- x2/M
#ors[i] <- log(p1/(1-p1))/log(p2/(1-p2))
t <- t.test(p1-p2)
ts[i] <- t$estimate
ps[i] <- t$p.value
}
hist(ts)
hist(ors)
mean(x1)
mean(x2)
var(x1)
var(x2)
shiny::runApp('shinies/app5')
runApp('shinies/app5')
?tail
runApp('shinies/app5')
runApp('shinies/app5')
runApp('shinies/app5')
runApp('shinies/app5')
runApp('shinies/app5')
runApp('shinies/app5')
runApp('shinies/app5')
runApp('shinies/app5')
runApp('shinies/app5')
runApp('shinies/app5')
runApp('shinies/app7b')
runApp('shinies/app7b')
runApp('shinies/app7b')
n.samples
samp1
samp1()
runApp('shinies/app7b')
samp1()
runApp('shinies/app7b')
runApp('shinies/app7b')
samp1()
values$total1
sample.first
runApp('shinies/app7b')
runApp('shinies/app7b')
runApp('shinies/app7b')
runApp('shinies/app7b')
runApp('shinies/app7b')
