length(dif12b)
diff.all <- c(dif17b,dif16b,dif15b,dif14b,dif13b,dif12b)
length(unique(diff.all))
length(diff.all)
m17 <- merged_2017[which(merged_2017$pumper=='Y'),]
m17$loser <- F
m17[which(m17$MAST_ENC %in% dif17b),'loser'] <- T
table(m17$loser)
m16 <- merged_2016[which(merged_2016$pumper=='Y'),]
m16$loser <- F
m16[which(m16$MAST_ENC %in% dif16b),'loser'] <- T
table(m16$loser)
m15 <- merged_2015[which(merged_2015$pumper=='Y'),]
m15$loser <- F
m15[which(m15$MAST_ENC %in% dif15b),'loser'] <- T
table(m15$loser)
m14 <- merged_2014[which(merged_2014$pumper=='Y'),]
m14$loser <- F
m14[which(m14$MAST_ENC %in% dif14b),'loser'] <- T
table(m14$loser)
m13 <- merged_2013[which(merged_2013$pumper=='Y'),]
m13$loser <- F
m13[which(m13$MAST_ENC %in% dif13b),'loser'] <- T
table(m13$loser)
m12 <- merged_2012[which(merged_2012$pumper=='Y'),]
m12$loser <- F
m12[which(m12$MAST_ENC %in% dif12b),'loser'] <- T
table(m12$loser)
m.all <- rbind(m12,m13,m14,m15,m16,m17)
dim(m.all)
dim(m.all[which(m.all$loser==T),])
table(m.all$loser,m.all$GENDER)
table(m.all$loser,m.all$eth)
table(m.all$loser,m.all$agegroup.in.year)
table(m.all$loser,m.all$dep.quint)
round(prop.table(table(m.all$loser,m.all$GENDER),margin=2),2)
round(prop.table(table(m.all$loser,m.all$eth),margin=2),2)
round(prop.table(table(m.all$loser,m.all$agegroup.in.year),margin=2),2)
round(prop.table(table(m.all$loser,m.all$dep.quint),margin=2),2)
# look more closely at losers
s <- setdiff(dif15,dif15b)[2]
s <- dif15b[1]
sp <- phh[which(phh$MAST==s) ,]
sp$theDate <- as.Date(sp$DATE_DISPENSED,format='%d/%m/%Y')
sp[which(sp$theDate > as.Date("31/12/2015",format='%d/%m/%Y')),c("DATE_DISPENSED","CHEMICAL_ID")]
mos[which(mos$MAST_ENC == s),]
mos2[which(mos$MAST_ENC == s),]
colnames(merged_2016)
df15 <- merged_2015[which(merged_2015$MAST_ENC %in% dif15b),]
table(df15$GENDER)
table(df15$eth)
table(df15$agegroup.in.year)
table(df15$dep.quint)
df15 <- merged_2015[which(merged_2015$pumper=='Y'),]
df15$loser <- 0
df15[which(df15$MAST_ENC %in% dif15b),'loser'] <- 1
table(df15$loser)
df15$GENDER <- factor(df15$GENDER)
df15$eth <- factor(df15$eth)
df15$agegroup.in.year <-factor(df15$agegroup.in.year)
df15[which(df15$agegroup.in.year == "70+"),'agegroup.in.year'] <- "50-59"
df15[which(df15$agegroup.in.year == "60-69"),'agegroup.in.year'] <- "50-59"
df15$agegroup.in.year <-factor(df15$agegroup.in.year)
df15$dep.quint <- factor(df15$dep.quint)
table(df15$loser,df15$GENDER)
table(df15$loser,df15$eth)
table(df15$loser,df15$agegroup.in.year)
table(df15$loser,df15$dep.quint)
round(prop.table(table(df15$loser,df15$GENDER),margin=2),2)
round(prop.table(table(df15$loser,df15$eth),margin=2),2)
round(prop.table(table(df15$loser,df15$agegroup.in.year),margin=2),2)
round(prop.table(table(df15$loser,df15$dep.quint),margin=2),2)
dim(df15)
m15 <- glm(loser ~ GENDER + eth + dep.quint
+ agegroup.in.year
,data=m.all,
family='binomial')
#m15 <- glm(pumper=='Y' ~ GENDER
#           ,data=df15,
#           family='binomial')
anova(m15,test='Chisq')
summary(m15)
coef <- coefficients(m15)
round(exp(coef),1)
ci <- confint(m15)
round(exp(ci),1)
length(setdiff(pumpers2014,pumpers2015))
length(setdiff(pumpers2013,pumpers2014))
length(setdiff(pumpers2012,pumpers2013))
## question about pumpers age vs sex
pumpers16 <- merged_2016[which(merged_2016$pumper=='Y'),]
dim(pumpers16)
tp16 <- table(pumpers16$GENDER,pumpers16$agegroup.in.year)
tp16
round(prop.table(tp16,margin=2),2)
chisq.test(pumpers16$GENDER,pumpers16$agegroup.in.year)
length(which(merged_2016$agegroup.in.year=="30-39"))
table(merged_2016$agegroup.in.year,merged_2016$GENDER)
##tinkeringwith contrast
merged_2016$female <- factor(merged_2016$female)
m3 <- glm(pumper=='Y' ~ GENDER * age.group
,data=merged_2016,family=binomial)
ageDiff <- contrast(m3,
list(age.group = levels(merged_2016$age.group), GENDER = "F"),
list(age.group = levels(merged_2016$age.group), GENDER = "M"))
lower <- exp(ageDiff[[4]])
upper <-exp(ageDiff[[5]])
cbind(lower,upper)
# non parametric bootrap
# main effects only
iter <- 500
me.boots_m <- matrix(NA, nrow=iter, ncol=7)
me.boots_f <- matrix(NA, nrow=iter, ncol=7)
M <- dim(merged_2016)[1]
for (i in 1:iter) {
if (i %% 100 ==0) { print(i) }
s <- sample(M,replace=T)
ds <- merged_2016[s,]
m.me <- glm(pumper=='Y' ~ factor(female)  + age.group + dep.quint + eth + FUNDING_DHB_CODE
,data=ds,family=binomial)
coef <- coefficients(m.me)
me.boots_m[i,] <- coef[seq(3,9)]
me.boots_f[i,] <- coef[seq(3,9)] + rep(coef[2],7)
}
for (i in 1:7) {
q <- quantile(exp(me.boots_f[,i]),probs=c(0.025,0.975))
print(round(q,1))
}
for (i in 1:7) {
q <- quantile(exp(me.boots_m[,i]),probs=c(0.025,0.975))
print(round(q,1))
}
# with interaction
iter <- 1000
boots_m <- matrix(NA, nrow=iter, ncol=7)
boots_f <- matrix(NA, nrow=iter, ncol=7)
for (i in 1:iter) {
if (i %% 100 ==0) { print(i) }
s <- sample(M,replace=T)
ds <- merged_2016[s,]
m <- glm(pumper=='Y' ~ factor(female)  * agegroup.in.year + dep.quint + eth + FUNDING_DHB_CODE
,data=ds,family=binomial)
coef <- coefficients(m)
pm <- coef[seq(3,9)]
pf <- coef[seq(3,9)] + rep(coefficients(m)[2],7) +
coef[seq(44-6,44)]
boots_m[i,] <- pm
boots_f[i,] <- pf
}
exp(boots[,1])
hist(exp(boots_f[,1]))
hist(exp(boots_m[,1]))
for (i in 1:7) {
q <- quantile(exp(boots_f[,i]),probs=c(0.025,0.975))
# print estimate
print(mean(exp(boots_f[,i])))
# printCI
#print(round(q,1))
}
for (i in 1:7) {
q <- quantile(exp(boots_m[,i]),probs=c(0.025,0.975))
# print estimate
print(mean(exp(boots_m[,i])))
# printCI
#print(round(q,1))
}
mean(exp(boots[,7]))
write.csv(merged_2016,'~/Downloads/merged_2016.csv')
lrtest(m2,m)
merged_2016$agegroup.in.year <- relevel(factor(merged_2016$agegroup.in.year),
ref="20-29")
m <- glm(pumper=='Y' ~ factor(female)  * agegroup.in.year + dep.quint + eth + FUNDING_DHB_CODE
,data=merged_2016,family=binomial)
anova(m,test='Chisq')
summary(m)
coef <- coefficients(m)
ci <- confint(m)
exp(ci)
exp(coef)
f2016 <- merged_2016[which(merged_2016$female==T),]
m2016 <- merged_2016[which(merged_2016$female==F),]
dim(m2016)
tf <- table(f2016$pumper,f2016$agegroup.in.year)
round(tf)
pfprop <- prop.table(tf,margin=2)
round(pfprop,2)
tm <- table(m2016$pumper,m2016$agegroup.in.year)
round(tm)
pmprop <- prop.table(tm,margin=2)
round(pmprop,2)
print('done with theflowchart.R')
View(boots_m)
View(phh.save)
View(phh.save)
rm(phh.save)
rm(boots_f)
rm(boots_m)
View(pus_1998)
View(pus_1998)
rm(study_group,study_group.2,study_group.3,study_group.4,study_group.5)
memory.size()
memory.profile()
View(phh.study.period)
rm(phh.study.period)
View(phh.ins)
View(phh.ins)
rm(phh.ins)
View(phh_insulin)
rm(pusm)
colnames(pus.tmp)
colnames(pus)
list.phh.by.id <- function(id,n=NULL) {
res <- phh[which(phh$MAST_ENC == id),c('date.dispensed','TYPE')]
if (is.null(n)) {
return(res)
} else {
return(res[1:n,])
}
}
list.admissions.by.id <- function(id) {
#id = './48xkQ8EpM'
return(pus[which(pus$MAST_ENC==id),])
}
NUM.DAYS.CONS <- 180
colnames(phh)
dim(phh)
phh <- phh[which(phh$year>2011),]
dim(phh)
phh$TYPE <- NA
phh[which(phh$CHEMICAL_ID %in% insulins),"TYPE"] <- 'insulin'
phh[which(phh$CHEMICAL_ID %in% consumables),"TYPE"] <- 'consumable'
which(phh$year<=2011)
phh <- phh[which(!is.na(phh$TYPE)),]
dim(phh)
phh.cons <- phh[which(phh$TYPE == 'consumable'),]
phh.insulins <- phh[which(phh$TYPE=='insulin' ),]
pus$date.admitted <- as.Date( pus$EVSTDATE,format="%d/%m/%Y")
pus <- pus[which(pus$year>2012),]
pus.phh.cons <- merge(pus,phh.cons,by='MAST_ENC')
pus.phh.ins <- merge(pus,phh.insulins,by='MAST_ENC')
pus.phh.cons$diff <- as.numeric(pus.phh.cons$date.admitted - pus.phh.cons$date.dispensed)
pus.phh.ins$diff <- as.numeric(pus.phh.ins$date.admitted - pus.phh.ins$date.dispensed)
pump.users.admissions <-
pus.phh.cons[which(pus.phh.cons$diff > 0 & pus.phh.cons$diff < NUM.DAYS.CONS),
c("MAST_ENC","EVENT_ID")]
dim(pump.users.admissions)
ins.admissions <-
pus.phh.ins[which(pus.phh.ins$diff > 0  & pus.phh.ins$diff < NUM.DAYS.CONS),
c("MAST_ENC","EVENT_ID")]
dim(ins.admissions)
pump.users.events <- unique(pump.users.admissions$EVENT_ID)
ins.users.events <- unique(ins.admissions$EVENT_ID)
length(pump.users.events)
length(ins.users.events)
length(unique(pump.users.admissions$MAST_ENC))
length(unique(pump.users.admissions$EVENT_ID))
length(unique(ins.admissions$MAST_ENC))
length(unique(ins.admissions$EVENT_ID))
pus$pump.code <- NA
pus[which(pus$EVENT_ID %in% ins.users.events),"pump.code"] <- 0
pus[which(pus$EVENT_ID %in% pump.users.events),"pump.code"] <- 1
pus$days.in.hospital <- as.numeric(pus$date.discharged - pus$date.admitted)
table(pus$pump.code,useNA='always')
table(pus$pump.code,useNA='always')
dropm <- which(is.na(pus$pump.code))
length(dropm)
pus <- pus[-dropm,]
dim(pus)
colnames(pus)
admissions.summary = summarise_at(group_by(pus, MAST_ENC,pump.code), vars(days.in.hospital), funs(n(), sum(.,na.rm=T), mean(., na.rm = TRUE)))
library(dplyr) # for summarise_at
admissions.summary = summarise_at(group_by(pus, MAST_ENC,pump.code), vars(days.in.hospital), funs(n(), sum(.,na.rm=T), mean(., na.rm = TRUE)))
head(admissions.summary)
length(admissions.summary$MAST_ENC)
length(unique(admissions.summary$MAST_ENC))
colnames(admissions.summary)
colnames(pus)
p1 <- pus[which(pus$pumper==T),"MAST_ENC"]
p2 <- pus[which(pus$not.pumper==T),"MAST_ENC"]
p1.p2 <- p1[which(p1 %in% p2)]
p1.p2[1] %in% p2
p1.p2[1] %in% p2
in.p1.not.p2 <- setdiff(p1,p1.p2)
x <- in.p1.not.p2[1]
list.admissions.by.id(x)
head(admissions.summary)
DAY.START <- as.numeric(as.Date('01/01/2012',format="%d/%m/%Y"))
DAY.END <- as.numeric(as.Date('31/12/2018',format="%d/%m/%Y"))
c(DAY.START,DAY.END)
persons <- unique(phh_consumables$MAST_ENC)
persons
n.days <- DAY.END - DAY.START + 1
colnames(phh)
i = 1
thePerson <- persons[i]
thePersonsConsumables <-
phh_consumables[which(phh_consumables$MAST_ENC==thePerson),'date.dispensed']
thePersonsConsumables <- unique(as.numeric(thePersonsConsumables))
thePersonsConsumables <- thePersonsConsumables - as.numeric(DAY.START) + 1
calc.days.as.user.by.days <- function(days,n) {
# n <- NUM.DAYS.CONS
# add n columns to prevent writing off the edge
m <- matrix(data=NA,nrow=length(days),
ncol=n.days + n)
for (i in 1:length(days)) {
#interval <- c(days[i],days[i]+n)
#print(interval)
#print(days[i]:days[i]+n)
m[i,days[i]:(days[i]+n)] <- rep(1,times=n+1)
}
# remove the right hand edge
m <- m[,1:n.days]
#m
if (length(days)>1) {
days.as.pumper <- sum(colSums(m,na.rm=T)>0)
} else {
# can't do colSums on 1 row
days.as.pumper <- length(which(!is.na(m)))
}
return(days.as.pumper)
}
calc.days.as.user.by.id <- function(id,phh.table) {
# id <- persons[1]
# phh.table <- phh.cons
# phh.table <- phh.ins
thePersonsConsumables <-
phh.table[which(phh.table$MAST_ENC==id),'date.dispensed']
if (length(thePersonsConsumables) == 0) {
# this happens for the metformin group. They can be in the
#   study group, without taking insulin
return(0)
}
thePersonsConsumables <- unique(as.numeric(thePersonsConsumables))
# make 01/01/2012 day 1
thePersonsConsumables <- thePersonsConsumables - as.numeric(DAY.START) + 1
return(calc.days.as.user.by.days(thePersonsConsumables,NUM.DAYS.CONS))
}
days.for.all.pumpers <- vector()
for (i in 1:length(persons)) {
if (i %% 50 == 0) { print(i)}
days.for.all.pumpers[i] <- calc.days.as.user.by.id(persons[i],phh_consumables)
}
pumpers.with.days <- data.frame(
ID = persons,
pump.days = days.for.all.pumpers
)
insulin.days <- vector()
for (i in 1:length(study.group)) {
if (i %% 50 == 0) { print(i)}
insulin.days[i] <- calc.days.as.user.by.id(study.group[i],phh.insulins)
}
insulins.exposure <- data.frame(
ID = study.group,
insulin.days = insulin.days
)
dim(exposure)
head(exposure)
exposure <- merge(pumpers.with.days,insulins.exposure,by='ID',all=T)
dim(exposure)
head(exposure)
exposure[which(exposure$ID==x),]
exposure <- merge(pumpers.with.days,insulins.exposure,by='ID',all=T)
dim(exposure)
head(exposure)
dim(exposure)
exposure[which(is.na(exposure$pump.days)),"pump.days"] <- 0
length(which(is.na(exposure$insulin.days)))
exposure$insulin.days <- exposure$insulin.days - exposure$pump.days
head(exposure)
exposure.2 <- merge(exposure,mis,by.x='ID',by.y='MAST_ENC')
dim(exposure)
dim(exposure.2)
head(exposure.2)
x <- '..2BbiJh6Vw'
exposure[which(exposure$ID==x),]
print('done with admissions.R')
which(is.na(pus$pump.code))
table(pus$pump.code,useNA='always')
dim(d)
dropm <- which(is.na(pus$code))
length(dropm)
admissions.summary = summarise_at(group_by(pus, MAST_ENC,code), vars(days.in.hospital), funs(n(), sum(.,na.rm=T), mean(., na.rm = TRUE)))
admissions.summary = summarise_at(group_by(pus, MAST_ENC,pump.code), vars(days.in.hospital), funs(n(), sum(.,na.rm=T), mean(., na.rm = TRUE)))
colnames(admissions.summary)
head(admissions.summary)
melt.exposure <- function(df) {
e2 <- rbind(df,df)
# order by ID
e2 <- e2[order(e2[,1]),]
e2$pump.code <- rep(c(0,1),dim(df)[1])
e2$exposure.days <- NA
e2[which(e2$pump.code==0),'exposure.days'] <-
e2[which(e2$pump.code==0),'insulin.days']
e2[which(e2$pump.code==1),'exposure.days'] <-
e2[which(e2$pump.code==1),'pump.days']
e2$pump.days <- NULL
e2$insulin.days <- NULL
return(e2)
}
exposure.2
exposure.3 <- melt.exposure(exposure.2)
rm(exposure.2)
admissions.exposure <- merge(exposure.3,admissions.summary,
by.x=c('ID','pump.code'),
by.y=c('MAST_ENC','pump.code'),
all.x = T)
rm(exposure.3)
no.admissions <- which(is.na(admissions.exposure$n))
no.admissions
admissions.exposure[no.admissions,"n"] <- 0
admissions.exposure[no.admissions,"sum"] <- 0
admissions.exposure[no.admissions,"mean"] <- 0
admissions.exposure$pump.code <- factor(admissions.exposure$pump.code)
admissions.exposure[no.admissions,"n"] <- 0
admissions.exposure[no.admissions,"sum"] <- 0
admissions.exposure[no.admissions,"mean"] <- 0
admissions.exposure[1,]
colnames(admissions.exposure)
admissions.exposure$pump.code <- factor(admissions.exposure$pump.code)
table(admissions.exposure$n,useNA='always')
table(admissions.exposure$pump.code,useNA='always')
zero.exposure <- which(admissions.exposure$exposure.days<=0)
dim(admissions.exposure)
admissions.exposure <- admissions.exposure[-zero.exposure,]
dim(admissions.exposure)
someDate <- as.Date('31/12/2018',format="%d/%m/%Y")
admissions.exposure$age <- as.numeric(someDate - as.Date(admissions.exposure$DOB,format="%d/%m/%Y") )
admissions.exposure$YOUNG <-  (admissions.exposure$age < 20 * 365)
merged.short <- merged[,c('MAST_ENC','eth','dep.quint')]
admissions.exposure <- merge(admissions.exposure,merged.short,by.x='ID',by.y="MAST_ENC")
admissions.exposure$eth <- factor(admissions.exposure$eth)
admissions.exposure$eth <- relevel(admissions.exposure$eth,
ref="NZ/EUR")
admissions.exposure$dep.quint <- factor(admissions.exposure$dep.quint)
write.csv(admissions.exposure,'adm.csv')
m <- glm(n ~  GENDER + YOUNG + eth + dep.quint + pump.code,
data=admissions.exposure,
family='quasipoisson',
offset=log(exposure.days))
summary(m)
library(pscl)
?zeroinfl
admissions.exposure <- read.csv('adm.csv',header=T)
admissions.exposure <- read.csv('adm.csv',header=T)
admissions.exposure <- read.csv('adm.csv',header=T)
admissions.exposure <- read.csv('adm.csv',header=T)[1:100]
admissions.exposure <- read.csv('adm.csv',header=T)[1:100]
admissions.exposure <- read.csv('adm.csv',header=T)[1:100]
admissions.exposure <- read.csv('adm.csv',header=T)[1:100,]
m <- zeroinfl(n ~  GENDER + YOUNG + eth + dep.quint + pump.code,
data=admissions.exposure,
family='poisson',
offset=log(exposure.days))
m <- zeroinfl(n ~  GENDER + YOUNG + eth + dep.quint + pump.code,
data=admissions.exposure,
dist='poisson',
offset=log(exposure.days))
admissions.exposure <- read.csv('adm.csv',header=T)[1:1000,]
m <- zeroinfl(n ~  GENDER + YOUNG + eth + dep.quint + pump.code,
data=admissions.exposure,
dist='poisson',
offset=log(exposure.days))
summary(m)
m <- glm(n ~  GENDER + YOUNG + eth + dep.quint + pump.code,
data=admissions.exposure,
family='quasipoisson',
offset=log(exposure.days))
AIC(m)
m <- glm(n ~  GENDER + YOUNG + eth + dep.quint + pump.code,
data=admissions.exposure,
family='poisson',
offset=log(exposure.days))
AIC(m)
dim(admissions.exposure)
admissions.exposure <- read.csv('adm.csv',header=T)[1:1000,]
m <- glm(n ~  GENDER + YOUNG + eth + dep.quint + pump.code,
data=admissions.exposure,
family='poisson',
offset=log(exposure.days))
dim(admissions.exposure)
admissions.exposure <- read.csv('adm.csv',header=T)
m <- glm(n ~  GENDER + YOUNG + eth + dep.quint + pump.code,
data=admissions.exposure,
family='poisson',
offset=log(exposure.days))
dim(admissions.exposure)
AIC(m)
anova(m)
anova(m)
anova(m,test='Chisq')
?glm
m <- lmer(n ~  GENDER + YOUNG + eth + dep.quint + pump.code +
(1 | ID),
data=admissions.exposure,
family='poisson',
offset=log(exposure.days))
library(lme4)
m <- lmer(n ~  GENDER + YOUNG + eth + dep.quint + pump.code +
(1 | ID),
data=admissions.exposure,
family='poisson',
offset=log(exposure.days))
AIC(m)
m <- lmer(n ~  GENDER + YOUNG + eth + dep.quint + pump.code +
(1 | ID),
data=admissions.exposure,
family='poisson',
REML=F,
offset=log(exposure.days))
install.packages(c("Shiny", "table"))
?shinyTable
shiny::runApp('~/Documents/shiny/app2')
