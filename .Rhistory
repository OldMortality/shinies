write.csv(allnamesandemails,fname)
allnamesandemails[6,]
allnamesandemails[7,]
i = 7
j = 1
k = 1
colname <- str_c('Q2.',k,'.1_',j,'_1')
(! is.na(s[i,colname]) & length(s[i,colname]) > 0)
s[i,colname]
i = 1
j = 7
k = 1
colname <- str_c('Q2.',k,'.1_',j,'_1')
(! is.na(s[i,colname]) & length(s[i,colname]) > 0)
s[i,colname]
length(s[i,colname])
length("")
out <- data.frame()
counter <- 0
names <- character()
emails <- character()
for (i in 1:dim(s)[1]) {
counter <- counter + 1
names[counter] <- s[i,"Q1.2"]
emails[counter] <- s[i,"RecipientEmail"]
for (k in 1:3) {
for (j in 1:20) {
colname <- str_c('Q2.',k,'.1_',j,'_1')
if (! is.na(s[i,colname]) & length(s[i,colname]) > 1) {
counter <- counter + 1
names[counter] <- s[i,colname]
# email Q2.1#6_1_1
colname <- str_c('Q2.',k,'.6_',j,'_1')
emails[counter] <- s[i,colname]
}
}
}
}
allnamesandemails <- data.frame(names,emails)
fname <- '/Users/micheldelange/Documents/willemijn/data/allnamesandemails.csv'
write.csv(allnamesandemails,fname)
counter
out <- data.frame()
counter <- 0
names <- character()
emails <- character()
for (i in 1:dim(s)[1]) {
counter <- counter + 1
names[counter] <- s[i,"Q1.2"]
emails[counter] <- s[i,"RecipientEmail"]
for (k in 1:3) {
for (j in 1:20) {
colname <- str_c('Q2.',k,'.1_',j,'_1')
if (! is.na(s[i,colname]) & length(s[i,colname]) > 1) {
counter <- counter + 1
names[counter] <- s[i,colname]
# email Q2.1#6_1_1
colname <- str_c('Q2.',k,'.6_',j,'_1')
emails[counter] <- s[i,colname]
}
}
}
}
for (i in 1:dim(s)[1]) {
counter <- counter + 1
names[counter] <- s[i,"Q1.2"]
emails[counter] <- s[i,"RecipientEmail"]
for (k in 1:3) {
for (j in 1:20) {
colname <- str_c('Q2.',k,'.1_',j,'_1')
if (! is.na(s[i,colname]) & length(s[i,colname]) > 1) {
counter <- counter + 1
names[counter] <- s[i,colname]
# email Q2.1#6_1_1
colname <- str_c('Q2.',k,'.6_',j,'_1')
emails[counter] <- s[i,colname]
}
}
}
}
i = 1
j = 1
k = 1
counter = 1
colname <- str_c('Q2.',k,'.1_',j,'_1')
(! is.na(s[i,colname]) & length(s[i,colname]) > 1)
s[i,colname]
is.na(s[i,colname]
)
length(s[i,colname])
s[i,colname]
length(s[i,colname])
length(as.character(s[i,colname]))
length(s[i,colname])
dim(s[i,colname])
length()
s[i,colname]
s <- "red"
length(s)
?length
nchar(s)
(! is.na(s[i,colname]) & nchar(s[i,colname]) > 1)
s <- read.csv('/Users/micheldelange/Documents/willemijn/data/EDORJune 11_2018_17.19.csv',header=T,
stringsAsFactors = F)
counter <- 0
names <- character()
emails <- character()
for (i in 1:dim(s)[1]) {
counter <- counter + 1
names[counter] <- s[i,"Q1.2"]
emails[counter] <- s[i,"RecipientEmail"]
for (k in 1:3) {
for (j in 1:20) {
colname <- str_c('Q2.',k,'.1_',j,'_1')
if (! is.na(s[i,colname]) & nchar(s[i,colname]) > 1) {
counter <- counter + 1
names[counter] <- s[i,colname]
# email Q2.1#6_1_1
colname <- str_c('Q2.',k,'.6_',j,'_1')
emails[counter] <- s[i,colname]
}
}
}
}
s[i, colname]
as.character(s[i, colname])
out <- data.frame()
counter <- 0
names <- character()
emails <- character()
for (i in 1:dim(s)[1]) {
counter <- counter + 1
names[counter] <- s[i,"Q1.2"]
emails[counter] <- s[i,"RecipientEmail"]
for (k in 1:3) {
for (j in 1:20) {
colname <- str_c('Q2.',k,'.1_',j,'_1')
if (! is.na(s[i,colname]) & nchar(s[i,colname]) > 1) {
counter <- counter + 1
names[counter] <- s[i,colname]
# email Q2.1#6_1_1
colname <- str_c('Q2.',k,'.6_',j,'_1')
emails[counter] <- s[i,colname]
}
}
}
}
s[i,colname]
s <- read.csv('/Users/micheldelange/Documents/willemijn/data/EDORJune 11_2018_17.19.csv',header=T,
stringsAsFactors = F)
out <- data.frame()
counter <- 0
names <- character()
emails <- character()
for (i in 1:dim(s)[1]) {
counter <- counter + 1
names[counter] <- s[i,"Q1.2"]
emails[counter] <- s[i,"RecipientEmail"]
for (k in 1:3) {
for (j in 1:20) {
colname <- str_c('Q2.',k,'.1_',j,'_1')
if (! is.na(s[i,colname]) & nchar(s[i,colname]) > 1) {
counter <- counter + 1
names[counter] <- s[i,colname]
# email Q2.1#6_1_1
colname <- str_c('Q2.',k,'.6_',j,'_1')
emails[counter] <- s[i,colname]
}
}
}
}
allnamesandemails <- data.frame(names,emails)
fname <- '/Users/micheldelange/Documents/willemijn/data/allnamesandemails.csv'
write.csv(allnamesandemails,fname)
## lists all names, which occur in the spreadsheet
library('stringr')
s <- read.csv('/Users/micheldelange/Documents/willemijn/data/EDORJune 11_2018_17.19.csv',header=T,
stringsAsFactors = F)
dim(s)
colnames(s)
allnames <- vector()
counter <- 0
for (i in 1:dim(s)[1]) {
counter <- counter + 1
allnames <- c(allnames, s[i,"Q1.2"])
for (k in 1:3) {
for (j in 1:20) {
colname <- str_c('Q2.',k,'.1_',j,'_1')
name <- s[i,colname]
counter <- counter + 1
allnames <- unique(c(allnames, name))
}
}
}
fname <- '/Users/micheldelange/Documents/willemijn/data/allnames.csv'
write.csv(allnames,fname)
## names and email addresses
out <- data.frame()
counter <- 0
names <- character()
emails <- character()
for (i in 1:dim(s)[1]) {
counter <- counter + 1
names[counter] <- s[i,"Q1.2"]
emails[counter] <- s[i,"RecipientEmail"]
for (k in 1:3) {
for (j in 1:20) {
colname <- str_c('Q2.',k,'.1_',j,'_1')
if (! is.na(s[i,colname]) & nchar(s[i,colname]) > 1) {
counter <- counter + 1
names[counter] <- s[i,colname]
# email Q2.1#6_1_1
colname <- str_c('Q2.',k,'.6_',j,'_1')
emails[counter] <- s[i,colname]
}
}
}
}
allnamesandemails <- data.frame(names,emails)
fname <- '/Users/micheldelange/Documents/willemijn/data/allnamesandemails.csv'
write.csv(allnamesandemails,fname)
library('stringr')
library('qualtRics')
s <- read.csv('/Users/micheldelange/Documents/willemijn/data/EDORJune 11_2018_17.19.csv',header=T,
stringsAsFactors = F)
dim(s)
colnames(s)
head(colnames(s))
dim(s)
s1 <- s[,grep("StartDate",colnames(s),value=T)]
dim(s1)
s1 <- s[,colnames(grepl("StartDate",colnames(s)))]
dim(s1)
s$StartDate
library(igraph)
??igraph
head(s)
dim(s)
colnames(s)
s[,"StartDate"]
s[1,2]
t <- s[,grepl("Q2.1.",colnames(s))]
t <- s[,grepl("Q2.1.",colnames(s))]
head(colnames(t))
head(s$Q2.1.1_1_1)
dim(t)
head(t)
d <- data.frame()
for (k in 1:2) {
# for each person who sent in a survey:
for (j in 1:dim(s)[1]) {
# for each question on page 1: We should do this again if there are people with >20 answers
for (i in 1:20) {
from.email <-  toString(s$RecipientEmail[j] )
# to name
colname <- str_c("Q2.1.",k,"_",i,"_1")
to.name <- toString(s[j,colname])
# to org
colname <- str_c("Q2.1.1_",i,"_2")
org <- toString(s[j,colname])
# to subject
colname <- str_c("Q2.1.2_",i)
subject <- toString(s[j,colname])
# influences opinion/policy
colname <- str_c("Q2.1.3_",i)
influences <- toString(s[j,colname])
# in contact
colname <- str_c("Q2.1.4_",i)
incontact <- toString(s[j,colname])
# contact frequency
colname <- str_c("Q2.1.5_",i)
freq <- toString(s[j,colname])
# to email
colname <- str_c("Q2.1.6_",i,"_1")
to.email <- toString(s[j,colname])
# combine into 1 record
num_sender <- toString(j)
num <- toString(i)
rec <- c(num_sender,
num,
from.email,
to.name,
org,
subject,
influences,
incontact,
freq,
to.email
)
d <- rbind(rec,d,stringsAsFactors = F)
colnames(d) = c('num_sender',
'num',
'from.email',
'to.name',
'org',
'subject',
'influences',
'incontact',
'freq',
'to.email')
}
}
}
dropm <- which(d$to.name=="NA"| d$to.name == "" )
length(dropm)
if (length(dropm) > 0) {
d <- d[-dropm,]
}
dim(d)
table(d$subject)
d$obesity <- 0
d[which(grepl('Obesity',d$subject)),'obesity'] <- 1
d$diabetes <- 0
d[which(grepl('Diabetes',d$subject)),'diabetes'] <- 1
d$nutrition <- 0
d[which(grepl('Nutrition',d$subject)),'nutrition'] <- 1
d$physical_activity <- 0
d[which(grepl('Physical Activity',d$subject)),'physical_activity'] <- 1
table(d$subject,d$obesity)
table(d$subject,d$diabetes)
table(d$subject,d$nutrition)
table(d$subject,d$physical_activity)
dim(d)
table(d$influences)
d$opinion <- 0
d[which(grepl('opinion',d$influences)),'opinion'] <- 1
d$policy <- 0
d[which(grepl('policy',d$influences)),'policy'] <- 1
table(d$influences,d$opinion)
table(d$influences,d$policy)
dim(d)
colnames(d)
table(d$to.name)
table(d$to.email)
write.csv(d,'/Users/micheldelange/Documents/willemijn/rscripts/dJune 11_2018_17.19.csv')
g1 <- makeGraph(d)
# reads qualtrics survey data and converts to network with igraph
library('stringr')
library('qualtRics')
s <- read.csv('/Users/micheldelange/Documents/willemijn/data/EDORJune 11_2018_17.19.csv',header=T,
stringsAsFactors = F)
dim(s)
colnames(s)
head(colnames(s))
dim(s)
s1 <- s[,grep("StartDate",colnames(s),value=T)]
dim(s1)
s1 <- s[,colnames(grepl("StartDate",colnames(s)))]
dim(s1)
s$StartDate
library(igraph)
??igraph
#s <- read.csv('/Users/micheldelange/Documents/willemijn/dummy.csv',header=T,
#              stringsAsFactors = F)
head(s)
dim(s)
colnames(s)
s[,"StartDate"]
s[1,2]
## to do Q3. etc for multiple pages
t <- s[,grepl("Q2.1.",colnames(s))]
head(colnames(t))
head(s$Q2.1.1_1_1)
dim(t)
head(t)
d <- data.frame()
# for each set of 20 answers (page)
for (k in 1:2) {
# for each person who sent in a survey:
for (j in 1:dim(s)[1]) {
# for each question on page 1: We should do this again if there are people with >20 answers
for (i in 1:20) {
from.email <-  toString(s$RecipientEmail[j] )
# to name
colname <- str_c("Q2.1.",k,"_",i,"_1")
to.name <- toString(s[j,colname])
# to org
colname <- str_c("Q2.1.1_",i,"_2")
org <- toString(s[j,colname])
# to subject
colname <- str_c("Q2.1.2_",i)
subject <- toString(s[j,colname])
# influences opinion/policy
colname <- str_c("Q2.1.3_",i)
influences <- toString(s[j,colname])
# in contact
colname <- str_c("Q2.1.4_",i)
incontact <- toString(s[j,colname])
# contact frequency
colname <- str_c("Q2.1.5_",i)
freq <- toString(s[j,colname])
# to email
colname <- str_c("Q2.1.6_",i,"_1")
to.email <- toString(s[j,colname])
# combine into 1 record
num_sender <- toString(j)
num <- toString(i)
rec <- c(num_sender,
num,
from.email,
to.name,
org,
subject,
influences,
incontact,
freq,
to.email
)
d <- rbind(rec,d,stringsAsFactors = F)
colnames(d) = c('num_sender',
'num',
'from.email',
'to.name',
'org',
'subject',
'influences',
'incontact',
'freq',
'to.email')
}
}
}
#install.packages("igraph")
# todo: change to.email to to.name
#dropm <- which(d$to.name=="NA" | d$to.name== '')
dropm <- which(d$to.name=="NA"| d$to.name == "" )
length(dropm)
if (length(dropm) > 0) {
d <- d[-dropm,]
}
# split subject into 4 subgroups
dim(d)
table(d$subject)
d$obesity <- 0
d[which(grepl('Obesity',d$subject)),'obesity'] <- 1
d$diabetes <- 0
d[which(grepl('Diabetes',d$subject)),'diabetes'] <- 1
d$nutrition <- 0
d[which(grepl('Nutrition',d$subject)),'nutrition'] <- 1
d$physical_activity <- 0
d[which(grepl('Physical Activity',d$subject)),'physical_activity'] <- 1
table(d$subject,d$obesity)
table(d$subject,d$diabetes)
table(d$subject,d$nutrition)
table(d$subject,d$physical_activity)
# split infuences into 2 subgroups
dim(d)
table(d$influences)
d$opinion <- 0
d[which(grepl('opinion',d$influences)),'opinion'] <- 1
d$policy <- 0
d[which(grepl('policy',d$influences)),'policy'] <- 1
table(d$influences,d$opinion)
table(d$influences,d$policy)
dim(d)
colnames(d)
table(d$to.name)
table(d$to.email)
write.csv(d,'/Users/micheldelange/Documents/willemijn/rscripts/dJune 11_2018_17.19.csv')
## Load package
library(igraph)
g <- sample_smallworld(1, 100, 5, 0.05)
plot(g,labels='to_email')
# windows only?
#tkplot(g)
mean_distance(g)
transitivity(g, type="average")
g1 <- graph( edges=c(1,2, 2,3, 3, 1), n=3, directed=T )
plot(g1) # A simple plot of the network - we'll talk more about plots later
f <- "/Users/micheldelange/Documents/willemijn/rscripts/dummygraph"
write_graph(g1, file=f, format = c("edgelist"))
makeGraph <- function(d) {
edges <- vector()
j = 0
for (i in seq(1,dim(d)[1])) {
j <- j + 1
edges[j] <- d$from.email[i]
j <- j + 1
edges[j] <- d$to.email[i]
}
g1 <- graph( edges=edges,  directed=T )
return(g1)
}
makeEdges <- function(d) {
from <- vector()
to <- vector()
for (i in seq(1,dim(d)[1])) {
from[i] <- d$from.email[i]
to[i] <- d$to.email[i]
}
return(data.frame(cbind(from,to)))
}
g1 <- makeGraph(d)
plot(g1,pin=c(50,50)) # A simple plot of the network - we'll talk more about plots later
e1 <- makeEdges(d)
colnames(e1)
dropm <- which(e1$to == "NA")
e1 <- e1[-dropm,]
dim(e1)
table(e1$from)
write.csv(e1,'/Users/micheldelange/Documents/willemijn/rscripts/edges.csv')
par(mfrow=c(1,1))
for (i in 1:length(s$RecipientEmail)) {
print(i)
if (length(which(d$from.email==s$RecipientEmail[i]) ) > 0 ) {
plot(makeGraph(d[which(d$from.email==s$RecipientEmail[i] | d$to.email==s$RecipientEmail[i] ),]))
} else {
print(str_c("no edges starting at ",s$RecipientEmail[i]))
}
}
which(d$to.name == "")
d
